// Code generated by generate.go.  DO NOT EDIT.

package mkvparse

// Supported ElementIDs
const (
	AlphaModeElement                   ElementID = 0x53C0
	AspectRatioTypeElement             ElementID = 0x54B3
	AttachedFileElement                ElementID = 0x61A7
	AttachmentLinkElement              ElementID = 0x7446
	AttachmentsElement                 ElementID = 0x1941A469
	AudioElement                       ElementID = 0xE1
	BitDepthElement                    ElementID = 0x6264
	BitsPerChannelElement              ElementID = 0x55B2
	BlockAddIDElement                  ElementID = 0xEE
	BlockAdditionIDElement             ElementID = 0xCB
	BlockAdditionalElement             ElementID = 0xA5
	BlockAdditionsElement              ElementID = 0x75A1
	BlockDurationElement               ElementID = 0x9B
	BlockElement                       ElementID = 0xA1
	BlockGroupElement                  ElementID = 0xA0
	BlockMoreElement                   ElementID = 0xA6
	BlockVirtualElement                ElementID = 0xA2
	CRC32Element                       ElementID = 0xBF
	CbSubsamplingHorzElement           ElementID = 0x55B5
	CbSubsamplingVertElement           ElementID = 0x55B6
	ChannelPositionsElement            ElementID = 0x7D7B
	ChannelsElement                    ElementID = 0x9F
	ChapCountryElement                 ElementID = 0x437E
	ChapLanguageElement                ElementID = 0x437C
	ChapLanguageIETFElement            ElementID = 0x437D
	ChapProcessCodecIDElement          ElementID = 0x6955
	ChapProcessCommandElement          ElementID = 0x6911
	ChapProcessDataElement             ElementID = 0x6933
	ChapProcessElement                 ElementID = 0x6944
	ChapProcessPrivateElement          ElementID = 0x450D
	ChapProcessTimeElement             ElementID = 0x6922
	ChapStringElement                  ElementID = 0x85
	ChapterAtomElement                 ElementID = 0xB6
	ChapterDisplayElement              ElementID = 0x80
	ChapterFlagEnabledElement          ElementID = 0x4598
	ChapterFlagHiddenElement           ElementID = 0x98
	ChapterPhysicalEquivElement        ElementID = 0x63C3
	ChapterSegmentEditionUIDElement    ElementID = 0x6EBC
	ChapterSegmentUIDElement           ElementID = 0x6E67
	ChapterStringUIDElement            ElementID = 0x5654
	ChapterTimeEndElement              ElementID = 0x92
	ChapterTimeStartElement            ElementID = 0x91
	ChapterTrackElement                ElementID = 0x8F
	ChapterTrackNumberElement          ElementID = 0x89
	ChapterTranslateCodecElement       ElementID = 0x69BF
	ChapterTranslateEditionUIDElement  ElementID = 0x69FC
	ChapterTranslateElement            ElementID = 0x6924
	ChapterTranslateIDElement          ElementID = 0x69A5
	ChapterUIDElement                  ElementID = 0x73C4
	ChaptersElement                    ElementID = 0x1043A770
	ChromaSitingHorzElement            ElementID = 0x55B7
	ChromaSitingVertElement            ElementID = 0x55B8
	ChromaSubsamplingHorzElement       ElementID = 0x55B3
	ChromaSubsamplingVertElement       ElementID = 0x55B4
	ClusterElement                     ElementID = 0x1F43B675
	CodecDecodeAllElement              ElementID = 0xAA
	CodecDelayElement                  ElementID = 0x56AA
	CodecDownloadURLElement            ElementID = 0x26B240
	CodecIDElement                     ElementID = 0x86
	CodecInfoURLElement                ElementID = 0x3B4040
	CodecNameElement                   ElementID = 0x258688
	CodecPrivateElement                ElementID = 0x63A2
	CodecSettingsElement               ElementID = 0x3A9697
	CodecStateElement                  ElementID = 0xA4
	ColourElement                      ElementID = 0x55B0
	ColourSpaceElement                 ElementID = 0x2EB524
	ContentCompAlgoElement             ElementID = 0x4254
	ContentCompSettingsElement         ElementID = 0x4255
	ContentCompressionElement          ElementID = 0x5034
	ContentEncAlgoElement              ElementID = 0x47E1
	ContentEncKeyIDElement             ElementID = 0x47E2
	ContentEncodingElement             ElementID = 0x6240
	ContentEncodingOrderElement        ElementID = 0x5031
	ContentEncodingScopeElement        ElementID = 0x5032
	ContentEncodingTypeElement         ElementID = 0x5033
	ContentEncodingsElement            ElementID = 0x6D80
	ContentEncryptionElement           ElementID = 0x5035
	ContentSigAlgoElement              ElementID = 0x47E5
	ContentSigHashAlgoElement          ElementID = 0x47E6
	ContentSigKeyIDElement             ElementID = 0x47E4
	ContentSignatureElement            ElementID = 0x47E3
	CueBlockNumberElement              ElementID = 0x5378
	CueClusterPositionElement          ElementID = 0xF1
	CueCodecStateElement               ElementID = 0xEA
	CueDurationElement                 ElementID = 0xB2
	CuePointElement                    ElementID = 0xBB
	CueRefClusterElement               ElementID = 0x97
	CueRefCodecStateElement            ElementID = 0xEB
	CueRefNumberElement                ElementID = 0x535F
	CueRefTimeElement                  ElementID = 0x96
	CueReferenceElement                ElementID = 0xDB
	CueRelativePositionElement         ElementID = 0xF0
	CueTimeElement                     ElementID = 0xB3
	CueTrackElement                    ElementID = 0xF7
	CueTrackPositionsElement           ElementID = 0xB7
	CuesElement                        ElementID = 0x1C53BB6B
	DateUTCElement                     ElementID = 0x4461
	DefaultDecodedFieldDurationElement ElementID = 0x234E7A
	DefaultDurationElement             ElementID = 0x23E383
	DelayElement                       ElementID = 0xCE
	DiscardPaddingElement              ElementID = 0x75A2
	DisplayHeightElement               ElementID = 0x54BA
	DisplayUnitElement                 ElementID = 0x54B2
	DisplayWidthElement                ElementID = 0x54B0
	DocTypeElement                     ElementID = 0x4282
	DocTypeExtensionElement            ElementID = 0x4281
	DocTypeExtensionNameElement        ElementID = 0x4283
	DocTypeExtensionVersionElement     ElementID = 0x4284
	DocTypeReadVersionElement          ElementID = 0x4285
	DocTypeVersionElement              ElementID = 0x4287
	DurationElement                    ElementID = 0x4489
	EBMLElement                        ElementID = 0x1A45DFA3
	EBMLMaxIDLengthElement             ElementID = 0x42F2
	EBMLMaxSizeLengthElement           ElementID = 0x42F3
	EBMLReadVersionElement             ElementID = 0x42F7
	EBMLVersionElement                 ElementID = 0x4286
	EditionEntryElement                ElementID = 0x45B9
	EditionFlagDefaultElement          ElementID = 0x45DB
	EditionFlagHiddenElement           ElementID = 0x45BD
	EditionFlagOrderedElement          ElementID = 0x45DD
	EditionUIDElement                  ElementID = 0x45BC
	EncryptedBlockElement              ElementID = 0xAF
	FieldOrderElement                  ElementID = 0x9D
	FileDataElement                    ElementID = 0x465C
	FileDescriptionElement             ElementID = 0x467E
	FileMimeTypeElement                ElementID = 0x4660
	FileNameElement                    ElementID = 0x466E
	FileReferralElement                ElementID = 0x4675
	FileUIDElement                     ElementID = 0x46AE
	FileUsedEndTimeElement             ElementID = 0x4662
	FileUsedStartTimeElement           ElementID = 0x4661
	FlagDefaultElement                 ElementID = 0x88
	FlagEnabledElement                 ElementID = 0xB9
	FlagForcedElement                  ElementID = 0x55AA
	FlagInterlacedElement              ElementID = 0x9A
	FlagLacingElement                  ElementID = 0x9C
	FrameNumberElement                 ElementID = 0xCD
	FrameRateElement                   ElementID = 0x2383E3
	GammaValueElement                  ElementID = 0x2FB523
	InfoElement                        ElementID = 0x1549A966
	LaceNumberElement                  ElementID = 0xCC
	LanguageElement                    ElementID = 0x22B59C
	LanguageIETFElement                ElementID = 0x22B59D
	LuminanceMaxElement                ElementID = 0x55D9
	LuminanceMinElement                ElementID = 0x55DA
	MasteringMetadataElement           ElementID = 0x55D0
	MatrixCoefficientsElement          ElementID = 0x55B1
	MaxBlockAdditionIDElement          ElementID = 0x55EE
	MaxCLLElement                      ElementID = 0x55BC
	MaxCacheElement                    ElementID = 0x6DF8
	MaxFALLElement                     ElementID = 0x55BD
	MinCacheElement                    ElementID = 0x6DE7
	MuxingAppElement                   ElementID = 0x4D80
	NameElement                        ElementID = 0x536E
	NextFilenameElement                ElementID = 0x3E83BB
	NextUIDElement                     ElementID = 0x3EB923
	OldStereoModeElement               ElementID = 0x53B9
	OutputSamplingFrequencyElement     ElementID = 0x78B5
	PixelCropBottomElement             ElementID = 0x54AA
	PixelCropLeftElement               ElementID = 0x54CC
	PixelCropRightElement              ElementID = 0x54DD
	PixelCropTopElement                ElementID = 0x54BB
	PixelHeightElement                 ElementID = 0xBA
	PixelWidthElement                  ElementID = 0xB0
	PositionElement                    ElementID = 0xA7
	PrevFilenameElement                ElementID = 0x3C83AB
	PrevSizeElement                    ElementID = 0xAB
	PrevUIDElement                     ElementID = 0x3CB923
	PrimariesElement                   ElementID = 0x55BB
	PrimaryBChromaticityXElement       ElementID = 0x55D5
	PrimaryBChromaticityYElement       ElementID = 0x55D6
	PrimaryGChromaticityXElement       ElementID = 0x55D3
	PrimaryGChromaticityYElement       ElementID = 0x55D4
	PrimaryRChromaticityXElement       ElementID = 0x55D1
	PrimaryRChromaticityYElement       ElementID = 0x55D2
	ProjectionElement                  ElementID = 0x7670
	ProjectionPosePitchElement         ElementID = 0x7674
	ProjectionPoseRollElement          ElementID = 0x7675
	ProjectionPoseYawElement           ElementID = 0x7673
	ProjectionPrivateElement           ElementID = 0x7672
	ProjectionTypeElement              ElementID = 0x7671
	RangeElement                       ElementID = 0x55B9
	ReferenceBlockElement              ElementID = 0xFB
	ReferenceFrameElement              ElementID = 0xC8
	ReferenceOffsetElement             ElementID = 0xC9
	ReferencePriorityElement           ElementID = 0xFA
	ReferenceTimeCodeElement           ElementID = 0xCA
	ReferenceVirtualElement            ElementID = 0xFD
	SamplingFrequencyElement           ElementID = 0xB5
	SeekElement                        ElementID = 0x4DBB
	SeekHeadElement                    ElementID = 0x114D9B74
	SeekIDElement                      ElementID = 0x53AB
	SeekPositionElement                ElementID = 0x53AC
	SeekPreRollElement                 ElementID = 0x56BB
	SegmentElement                     ElementID = 0x18538067
	SegmentFamilyElement               ElementID = 0x4444
	SegmentFilenameElement             ElementID = 0x7384
	SegmentUIDElement                  ElementID = 0x73A4
	SilentTrackNumberElement           ElementID = 0x58D7
	SilentTracksElement                ElementID = 0x5854
	SimpleBlockElement                 ElementID = 0xA3
	SimpleTagElement                   ElementID = 0x67C8
	SliceDurationElement               ElementID = 0xCF
	SlicesElement                      ElementID = 0x8E
	StereoModeElement                  ElementID = 0x53B8
	TagAttachmentUIDElement            ElementID = 0x63C6
	TagBinaryElement                   ElementID = 0x4485
	TagChapterUIDElement               ElementID = 0x63C4
	TagDefaultElement                  ElementID = 0x4484
	TagEditionUIDElement               ElementID = 0x63C9
	TagElement                         ElementID = 0x7373
	TagLanguageElement                 ElementID = 0x447A
	TagLanguageIETFElement             ElementID = 0x447B
	TagNameElement                     ElementID = 0x45A3
	TagStringElement                   ElementID = 0x4487
	TagTrackUIDElement                 ElementID = 0x63C5
	TagsElement                        ElementID = 0x1254C367
	TargetTypeElement                  ElementID = 0x63CA
	TargetTypeValueElement             ElementID = 0x68CA
	TargetsElement                     ElementID = 0x63C0
	TimeSliceElement                   ElementID = 0xE8
	TimecodeElement                    ElementID = 0xE7
	TimecodeScaleElement               ElementID = 0x2AD7B1
	TitleElement                       ElementID = 0x7BA9
	TrackCombinePlanesElement          ElementID = 0xE3
	TrackEntryElement                  ElementID = 0xAE
	TrackJoinBlocksElement             ElementID = 0xE9
	TrackJoinUIDElement                ElementID = 0xED
	TrackNumberElement                 ElementID = 0xD7
	TrackOffsetElement                 ElementID = 0x537F
	TrackOperationElement              ElementID = 0xE2
	TrackOverlayElement                ElementID = 0x6FAB
	TrackPlaneElement                  ElementID = 0xE4
	TrackPlaneTypeElement              ElementID = 0xE6
	TrackPlaneUIDElement               ElementID = 0xE5
	TrackTimecodeScaleElement          ElementID = 0x23314F
	TrackTranslateCodecElement         ElementID = 0x66BF
	TrackTranslateEditionUIDElement    ElementID = 0x66FC
	TrackTranslateElement              ElementID = 0x6624
	TrackTranslateTrackIDElement       ElementID = 0x66A5
	TrackTypeElement                   ElementID = 0x83
	TrackUIDElement                    ElementID = 0x73C5
	TracksElement                      ElementID = 0x1654AE6B
	TransferCharacteristicsElement     ElementID = 0x55BA
	TrickMasterTrackSegmentUIDElement  ElementID = 0xC4
	TrickMasterTrackUIDElement         ElementID = 0xC7
	TrickTrackFlagElement              ElementID = 0xC6
	TrickTrackSegmentUIDElement        ElementID = 0xC1
	TrickTrackUIDElement               ElementID = 0xC0
	VideoElement                       ElementID = 0xE0
	VoidElement                        ElementID = 0xEC
	WhitePointChromaticityXElement     ElementID = 0x55D7
	WhitePointChromaticityYElement     ElementID = 0x55D8
	WritingAppElement                  ElementID = 0x5741
)

func getElementType(el ElementID) elementType {
	switch el {
	case AlphaModeElement:
		return uintegerType
	case AspectRatioTypeElement:
		return uintegerType
	case AttachedFileElement:
		return masterType
	case AttachmentLinkElement:
		return uintegerType
	case AttachmentsElement:
		return masterType
	case AudioElement:
		return masterType
	case BitDepthElement:
		return uintegerType
	case BitsPerChannelElement:
		return uintegerType
	case BlockAddIDElement:
		return uintegerType
	case BlockAdditionIDElement:
		return uintegerType
	case BlockAdditionalElement:
		return binaryType
	case BlockAdditionsElement:
		return masterType
	case BlockDurationElement:
		return uintegerType
	case BlockElement:
		return binaryType
	case BlockGroupElement:
		return masterType
	case BlockMoreElement:
		return masterType
	case BlockVirtualElement:
		return binaryType
	case CRC32Element:
		return binaryType
	case CbSubsamplingHorzElement:
		return uintegerType
	case CbSubsamplingVertElement:
		return uintegerType
	case ChannelPositionsElement:
		return binaryType
	case ChannelsElement:
		return uintegerType
	case ChapCountryElement:
		return stringType
	case ChapLanguageElement:
		return stringType
	case ChapLanguageIETFElement:
		return stringType
	case ChapProcessCodecIDElement:
		return uintegerType
	case ChapProcessCommandElement:
		return masterType
	case ChapProcessDataElement:
		return binaryType
	case ChapProcessElement:
		return masterType
	case ChapProcessPrivateElement:
		return binaryType
	case ChapProcessTimeElement:
		return uintegerType
	case ChapStringElement:
		return utf8Type
	case ChapterAtomElement:
		return masterType
	case ChapterDisplayElement:
		return masterType
	case ChapterFlagEnabledElement:
		return uintegerType
	case ChapterFlagHiddenElement:
		return uintegerType
	case ChapterPhysicalEquivElement:
		return uintegerType
	case ChapterSegmentEditionUIDElement:
		return uintegerType
	case ChapterSegmentUIDElement:
		return binaryType
	case ChapterStringUIDElement:
		return utf8Type
	case ChapterTimeEndElement:
		return uintegerType
	case ChapterTimeStartElement:
		return uintegerType
	case ChapterTrackElement:
		return masterType
	case ChapterTrackNumberElement:
		return uintegerType
	case ChapterTranslateCodecElement:
		return uintegerType
	case ChapterTranslateEditionUIDElement:
		return uintegerType
	case ChapterTranslateElement:
		return masterType
	case ChapterTranslateIDElement:
		return binaryType
	case ChapterUIDElement:
		return uintegerType
	case ChaptersElement:
		return masterType
	case ChromaSitingHorzElement:
		return uintegerType
	case ChromaSitingVertElement:
		return uintegerType
	case ChromaSubsamplingHorzElement:
		return uintegerType
	case ChromaSubsamplingVertElement:
		return uintegerType
	case ClusterElement:
		return masterType
	case CodecDecodeAllElement:
		return uintegerType
	case CodecDelayElement:
		return uintegerType
	case CodecDownloadURLElement:
		return stringType
	case CodecIDElement:
		return stringType
	case CodecInfoURLElement:
		return stringType
	case CodecNameElement:
		return utf8Type
	case CodecPrivateElement:
		return binaryType
	case CodecSettingsElement:
		return utf8Type
	case CodecStateElement:
		return binaryType
	case ColourElement:
		return masterType
	case ColourSpaceElement:
		return binaryType
	case ContentCompAlgoElement:
		return uintegerType
	case ContentCompSettingsElement:
		return binaryType
	case ContentCompressionElement:
		return masterType
	case ContentEncAlgoElement:
		return uintegerType
	case ContentEncKeyIDElement:
		return binaryType
	case ContentEncodingElement:
		return masterType
	case ContentEncodingOrderElement:
		return uintegerType
	case ContentEncodingScopeElement:
		return uintegerType
	case ContentEncodingTypeElement:
		return uintegerType
	case ContentEncodingsElement:
		return masterType
	case ContentEncryptionElement:
		return masterType
	case ContentSigAlgoElement:
		return uintegerType
	case ContentSigHashAlgoElement:
		return uintegerType
	case ContentSigKeyIDElement:
		return binaryType
	case ContentSignatureElement:
		return binaryType
	case CueBlockNumberElement:
		return uintegerType
	case CueClusterPositionElement:
		return uintegerType
	case CueCodecStateElement:
		return uintegerType
	case CueDurationElement:
		return uintegerType
	case CuePointElement:
		return masterType
	case CueRefClusterElement:
		return uintegerType
	case CueRefCodecStateElement:
		return uintegerType
	case CueRefNumberElement:
		return uintegerType
	case CueRefTimeElement:
		return uintegerType
	case CueReferenceElement:
		return masterType
	case CueRelativePositionElement:
		return uintegerType
	case CueTimeElement:
		return uintegerType
	case CueTrackElement:
		return uintegerType
	case CueTrackPositionsElement:
		return masterType
	case CuesElement:
		return masterType
	case DateUTCElement:
		return dateType
	case DefaultDecodedFieldDurationElement:
		return uintegerType
	case DefaultDurationElement:
		return uintegerType
	case DelayElement:
		return uintegerType
	case DiscardPaddingElement:
		return integerType
	case DisplayHeightElement:
		return uintegerType
	case DisplayUnitElement:
		return uintegerType
	case DisplayWidthElement:
		return uintegerType
	case DocTypeElement:
		return stringType
	case DocTypeExtensionElement:
		return masterType
	case DocTypeExtensionNameElement:
		return stringType
	case DocTypeExtensionVersionElement:
		return uintegerType
	case DocTypeReadVersionElement:
		return uintegerType
	case DocTypeVersionElement:
		return uintegerType
	case DurationElement:
		return floatType
	case EBMLElement:
		return masterType
	case EBMLMaxIDLengthElement:
		return uintegerType
	case EBMLMaxSizeLengthElement:
		return uintegerType
	case EBMLReadVersionElement:
		return uintegerType
	case EBMLVersionElement:
		return uintegerType
	case EditionEntryElement:
		return masterType
	case EditionFlagDefaultElement:
		return uintegerType
	case EditionFlagHiddenElement:
		return uintegerType
	case EditionFlagOrderedElement:
		return uintegerType
	case EditionUIDElement:
		return uintegerType
	case EncryptedBlockElement:
		return binaryType
	case FieldOrderElement:
		return uintegerType
	case FileDataElement:
		return binaryType
	case FileDescriptionElement:
		return utf8Type
	case FileMimeTypeElement:
		return stringType
	case FileNameElement:
		return utf8Type
	case FileReferralElement:
		return binaryType
	case FileUIDElement:
		return uintegerType
	case FileUsedEndTimeElement:
		return uintegerType
	case FileUsedStartTimeElement:
		return uintegerType
	case FlagDefaultElement:
		return uintegerType
	case FlagEnabledElement:
		return uintegerType
	case FlagForcedElement:
		return uintegerType
	case FlagInterlacedElement:
		return uintegerType
	case FlagLacingElement:
		return uintegerType
	case FrameNumberElement:
		return uintegerType
	case FrameRateElement:
		return floatType
	case GammaValueElement:
		return floatType
	case InfoElement:
		return masterType
	case LaceNumberElement:
		return uintegerType
	case LanguageElement:
		return stringType
	case LanguageIETFElement:
		return stringType
	case LuminanceMaxElement:
		return floatType
	case LuminanceMinElement:
		return floatType
	case MasteringMetadataElement:
		return masterType
	case MatrixCoefficientsElement:
		return uintegerType
	case MaxBlockAdditionIDElement:
		return uintegerType
	case MaxCLLElement:
		return uintegerType
	case MaxCacheElement:
		return uintegerType
	case MaxFALLElement:
		return uintegerType
	case MinCacheElement:
		return uintegerType
	case MuxingAppElement:
		return utf8Type
	case NameElement:
		return utf8Type
	case NextFilenameElement:
		return utf8Type
	case NextUIDElement:
		return binaryType
	case OldStereoModeElement:
		return uintegerType
	case OutputSamplingFrequencyElement:
		return floatType
	case PixelCropBottomElement:
		return uintegerType
	case PixelCropLeftElement:
		return uintegerType
	case PixelCropRightElement:
		return uintegerType
	case PixelCropTopElement:
		return uintegerType
	case PixelHeightElement:
		return uintegerType
	case PixelWidthElement:
		return uintegerType
	case PositionElement:
		return uintegerType
	case PrevFilenameElement:
		return utf8Type
	case PrevSizeElement:
		return uintegerType
	case PrevUIDElement:
		return binaryType
	case PrimariesElement:
		return uintegerType
	case PrimaryBChromaticityXElement:
		return floatType
	case PrimaryBChromaticityYElement:
		return floatType
	case PrimaryGChromaticityXElement:
		return floatType
	case PrimaryGChromaticityYElement:
		return floatType
	case PrimaryRChromaticityXElement:
		return floatType
	case PrimaryRChromaticityYElement:
		return floatType
	case ProjectionElement:
		return masterType
	case ProjectionPosePitchElement:
		return floatType
	case ProjectionPoseRollElement:
		return floatType
	case ProjectionPoseYawElement:
		return floatType
	case ProjectionPrivateElement:
		return binaryType
	case ProjectionTypeElement:
		return uintegerType
	case RangeElement:
		return uintegerType
	case ReferenceBlockElement:
		return integerType
	case ReferenceFrameElement:
		return masterType
	case ReferenceOffsetElement:
		return uintegerType
	case ReferencePriorityElement:
		return uintegerType
	case ReferenceTimeCodeElement:
		return uintegerType
	case ReferenceVirtualElement:
		return integerType
	case SamplingFrequencyElement:
		return floatType
	case SeekElement:
		return masterType
	case SeekHeadElement:
		return masterType
	case SeekIDElement:
		return binaryType
	case SeekPositionElement:
		return uintegerType
	case SeekPreRollElement:
		return uintegerType
	case SegmentElement:
		return masterType
	case SegmentFamilyElement:
		return binaryType
	case SegmentFilenameElement:
		return utf8Type
	case SegmentUIDElement:
		return binaryType
	case SilentTrackNumberElement:
		return uintegerType
	case SilentTracksElement:
		return masterType
	case SimpleBlockElement:
		return binaryType
	case SimpleTagElement:
		return masterType
	case SliceDurationElement:
		return uintegerType
	case SlicesElement:
		return masterType
	case StereoModeElement:
		return uintegerType
	case TagAttachmentUIDElement:
		return uintegerType
	case TagBinaryElement:
		return binaryType
	case TagChapterUIDElement:
		return uintegerType
	case TagDefaultElement:
		return uintegerType
	case TagEditionUIDElement:
		return uintegerType
	case TagElement:
		return masterType
	case TagLanguageElement:
		return stringType
	case TagLanguageIETFElement:
		return stringType
	case TagNameElement:
		return utf8Type
	case TagStringElement:
		return utf8Type
	case TagTrackUIDElement:
		return uintegerType
	case TagsElement:
		return masterType
	case TargetTypeElement:
		return stringType
	case TargetTypeValueElement:
		return uintegerType
	case TargetsElement:
		return masterType
	case TimeSliceElement:
		return masterType
	case TimecodeElement:
		return uintegerType
	case TimecodeScaleElement:
		return uintegerType
	case TitleElement:
		return utf8Type
	case TrackCombinePlanesElement:
		return masterType
	case TrackEntryElement:
		return masterType
	case TrackJoinBlocksElement:
		return masterType
	case TrackJoinUIDElement:
		return uintegerType
	case TrackNumberElement:
		return uintegerType
	case TrackOffsetElement:
		return integerType
	case TrackOperationElement:
		return masterType
	case TrackOverlayElement:
		return uintegerType
	case TrackPlaneElement:
		return masterType
	case TrackPlaneTypeElement:
		return uintegerType
	case TrackPlaneUIDElement:
		return uintegerType
	case TrackTimecodeScaleElement:
		return floatType
	case TrackTranslateCodecElement:
		return uintegerType
	case TrackTranslateEditionUIDElement:
		return uintegerType
	case TrackTranslateElement:
		return masterType
	case TrackTranslateTrackIDElement:
		return binaryType
	case TrackTypeElement:
		return uintegerType
	case TrackUIDElement:
		return uintegerType
	case TracksElement:
		return masterType
	case TransferCharacteristicsElement:
		return uintegerType
	case TrickMasterTrackSegmentUIDElement:
		return binaryType
	case TrickMasterTrackUIDElement:
		return uintegerType
	case TrickTrackFlagElement:
		return uintegerType
	case TrickTrackSegmentUIDElement:
		return binaryType
	case TrickTrackUIDElement:
		return uintegerType
	case VideoElement:
		return masterType
	case VoidElement:
		return binaryType
	case WhitePointChromaticityXElement:
		return floatType
	case WhitePointChromaticityYElement:
		return floatType
	case WritingAppElement:
		return utf8Type
	default:
		return elementType(0)
	}
}

var elementNames = map[ElementID]string{
	AlphaModeElement:                   "AlphaMode",
	AspectRatioTypeElement:             "AspectRatioType",
	AttachedFileElement:                "AttachedFile",
	AttachmentLinkElement:              "AttachmentLink",
	AttachmentsElement:                 "Attachments",
	AudioElement:                       "Audio",
	BitDepthElement:                    "BitDepth",
	BitsPerChannelElement:              "BitsPerChannel",
	BlockAddIDElement:                  "BlockAddID",
	BlockAdditionIDElement:             "BlockAdditionID",
	BlockAdditionalElement:             "BlockAdditional",
	BlockAdditionsElement:              "BlockAdditions",
	BlockDurationElement:               "BlockDuration",
	BlockElement:                       "Block",
	BlockGroupElement:                  "BlockGroup",
	BlockMoreElement:                   "BlockMore",
	BlockVirtualElement:                "BlockVirtual",
	CRC32Element:                       "CRC32",
	CbSubsamplingHorzElement:           "CbSubsamplingHorz",
	CbSubsamplingVertElement:           "CbSubsamplingVert",
	ChannelPositionsElement:            "ChannelPositions",
	ChannelsElement:                    "Channels",
	ChapCountryElement:                 "ChapCountry",
	ChapLanguageElement:                "ChapLanguage",
	ChapLanguageIETFElement:            "ChapLanguageIETF",
	ChapProcessCodecIDElement:          "ChapProcessCodecID",
	ChapProcessCommandElement:          "ChapProcessCommand",
	ChapProcessDataElement:             "ChapProcessData",
	ChapProcessElement:                 "ChapProcess",
	ChapProcessPrivateElement:          "ChapProcessPrivate",
	ChapProcessTimeElement:             "ChapProcessTime",
	ChapStringElement:                  "ChapString",
	ChapterAtomElement:                 "ChapterAtom",
	ChapterDisplayElement:              "ChapterDisplay",
	ChapterFlagEnabledElement:          "ChapterFlagEnabled",
	ChapterFlagHiddenElement:           "ChapterFlagHidden",
	ChapterPhysicalEquivElement:        "ChapterPhysicalEquiv",
	ChapterSegmentEditionUIDElement:    "ChapterSegmentEditionUID",
	ChapterSegmentUIDElement:           "ChapterSegmentUID",
	ChapterStringUIDElement:            "ChapterStringUID",
	ChapterTimeEndElement:              "ChapterTimeEnd",
	ChapterTimeStartElement:            "ChapterTimeStart",
	ChapterTrackElement:                "ChapterTrack",
	ChapterTrackNumberElement:          "ChapterTrackNumber",
	ChapterTranslateCodecElement:       "ChapterTranslateCodec",
	ChapterTranslateEditionUIDElement:  "ChapterTranslateEditionUID",
	ChapterTranslateElement:            "ChapterTranslate",
	ChapterTranslateIDElement:          "ChapterTranslateID",
	ChapterUIDElement:                  "ChapterUID",
	ChaptersElement:                    "Chapters",
	ChromaSitingHorzElement:            "ChromaSitingHorz",
	ChromaSitingVertElement:            "ChromaSitingVert",
	ChromaSubsamplingHorzElement:       "ChromaSubsamplingHorz",
	ChromaSubsamplingVertElement:       "ChromaSubsamplingVert",
	ClusterElement:                     "Cluster",
	CodecDecodeAllElement:              "CodecDecodeAll",
	CodecDelayElement:                  "CodecDelay",
	CodecDownloadURLElement:            "CodecDownloadURL",
	CodecIDElement:                     "CodecID",
	CodecInfoURLElement:                "CodecInfoURL",
	CodecNameElement:                   "CodecName",
	CodecPrivateElement:                "CodecPrivate",
	CodecSettingsElement:               "CodecSettings",
	CodecStateElement:                  "CodecState",
	ColourElement:                      "Colour",
	ColourSpaceElement:                 "ColourSpace",
	ContentCompAlgoElement:             "ContentCompAlgo",
	ContentCompSettingsElement:         "ContentCompSettings",
	ContentCompressionElement:          "ContentCompression",
	ContentEncAlgoElement:              "ContentEncAlgo",
	ContentEncKeyIDElement:             "ContentEncKeyID",
	ContentEncodingElement:             "ContentEncoding",
	ContentEncodingOrderElement:        "ContentEncodingOrder",
	ContentEncodingScopeElement:        "ContentEncodingScope",
	ContentEncodingTypeElement:         "ContentEncodingType",
	ContentEncodingsElement:            "ContentEncodings",
	ContentEncryptionElement:           "ContentEncryption",
	ContentSigAlgoElement:              "ContentSigAlgo",
	ContentSigHashAlgoElement:          "ContentSigHashAlgo",
	ContentSigKeyIDElement:             "ContentSigKeyID",
	ContentSignatureElement:            "ContentSignature",
	CueBlockNumberElement:              "CueBlockNumber",
	CueClusterPositionElement:          "CueClusterPosition",
	CueCodecStateElement:               "CueCodecState",
	CueDurationElement:                 "CueDuration",
	CuePointElement:                    "CuePoint",
	CueRefClusterElement:               "CueRefCluster",
	CueRefCodecStateElement:            "CueRefCodecState",
	CueRefNumberElement:                "CueRefNumber",
	CueRefTimeElement:                  "CueRefTime",
	CueReferenceElement:                "CueReference",
	CueRelativePositionElement:         "CueRelativePosition",
	CueTimeElement:                     "CueTime",
	CueTrackElement:                    "CueTrack",
	CueTrackPositionsElement:           "CueTrackPositions",
	CuesElement:                        "Cues",
	DateUTCElement:                     "DateUTC",
	DefaultDecodedFieldDurationElement: "DefaultDecodedFieldDuration",
	DefaultDurationElement:             "DefaultDuration",
	DelayElement:                       "Delay",
	DiscardPaddingElement:              "DiscardPadding",
	DisplayHeightElement:               "DisplayHeight",
	DisplayUnitElement:                 "DisplayUnit",
	DisplayWidthElement:                "DisplayWidth",
	DocTypeElement:                     "DocType",
	DocTypeExtensionElement:            "DocTypeExtension",
	DocTypeExtensionNameElement:        "DocTypeExtensionName",
	DocTypeExtensionVersionElement:     "DocTypeExtensionVersion",
	DocTypeReadVersionElement:          "DocTypeReadVersion",
	DocTypeVersionElement:              "DocTypeVersion",
	DurationElement:                    "Duration",
	EBMLElement:                        "EBML",
	EBMLMaxIDLengthElement:             "EBMLMaxIDLength",
	EBMLMaxSizeLengthElement:           "EBMLMaxSizeLength",
	EBMLReadVersionElement:             "EBMLReadVersion",
	EBMLVersionElement:                 "EBMLVersion",
	EditionEntryElement:                "EditionEntry",
	EditionFlagDefaultElement:          "EditionFlagDefault",
	EditionFlagHiddenElement:           "EditionFlagHidden",
	EditionFlagOrderedElement:          "EditionFlagOrdered",
	EditionUIDElement:                  "EditionUID",
	EncryptedBlockElement:              "EncryptedBlock",
	FieldOrderElement:                  "FieldOrder",
	FileDataElement:                    "FileData",
	FileDescriptionElement:             "FileDescription",
	FileMimeTypeElement:                "FileMimeType",
	FileNameElement:                    "FileName",
	FileReferralElement:                "FileReferral",
	FileUIDElement:                     "FileUID",
	FileUsedEndTimeElement:             "FileUsedEndTime",
	FileUsedStartTimeElement:           "FileUsedStartTime",
	FlagDefaultElement:                 "FlagDefault",
	FlagEnabledElement:                 "FlagEnabled",
	FlagForcedElement:                  "FlagForced",
	FlagInterlacedElement:              "FlagInterlaced",
	FlagLacingElement:                  "FlagLacing",
	FrameNumberElement:                 "FrameNumber",
	FrameRateElement:                   "FrameRate",
	GammaValueElement:                  "GammaValue",
	InfoElement:                        "Info",
	LaceNumberElement:                  "LaceNumber",
	LanguageElement:                    "Language",
	LanguageIETFElement:                "LanguageIETF",
	LuminanceMaxElement:                "LuminanceMax",
	LuminanceMinElement:                "LuminanceMin",
	MasteringMetadataElement:           "MasteringMetadata",
	MatrixCoefficientsElement:          "MatrixCoefficients",
	MaxBlockAdditionIDElement:          "MaxBlockAdditionID",
	MaxCLLElement:                      "MaxCLL",
	MaxCacheElement:                    "MaxCache",
	MaxFALLElement:                     "MaxFALL",
	MinCacheElement:                    "MinCache",
	MuxingAppElement:                   "MuxingApp",
	NameElement:                        "Name",
	NextFilenameElement:                "NextFilename",
	NextUIDElement:                     "NextUID",
	OldStereoModeElement:               "OldStereoMode",
	OutputSamplingFrequencyElement:     "OutputSamplingFrequency",
	PixelCropBottomElement:             "PixelCropBottom",
	PixelCropLeftElement:               "PixelCropLeft",
	PixelCropRightElement:              "PixelCropRight",
	PixelCropTopElement:                "PixelCropTop",
	PixelHeightElement:                 "PixelHeight",
	PixelWidthElement:                  "PixelWidth",
	PositionElement:                    "Position",
	PrevFilenameElement:                "PrevFilename",
	PrevSizeElement:                    "PrevSize",
	PrevUIDElement:                     "PrevUID",
	PrimariesElement:                   "Primaries",
	PrimaryBChromaticityXElement:       "PrimaryBChromaticityX",
	PrimaryBChromaticityYElement:       "PrimaryBChromaticityY",
	PrimaryGChromaticityXElement:       "PrimaryGChromaticityX",
	PrimaryGChromaticityYElement:       "PrimaryGChromaticityY",
	PrimaryRChromaticityXElement:       "PrimaryRChromaticityX",
	PrimaryRChromaticityYElement:       "PrimaryRChromaticityY",
	ProjectionElement:                  "Projection",
	ProjectionPosePitchElement:         "ProjectionPosePitch",
	ProjectionPoseRollElement:          "ProjectionPoseRoll",
	ProjectionPoseYawElement:           "ProjectionPoseYaw",
	ProjectionPrivateElement:           "ProjectionPrivate",
	ProjectionTypeElement:              "ProjectionType",
	RangeElement:                       "Range",
	ReferenceBlockElement:              "ReferenceBlock",
	ReferenceFrameElement:              "ReferenceFrame",
	ReferenceOffsetElement:             "ReferenceOffset",
	ReferencePriorityElement:           "ReferencePriority",
	ReferenceTimeCodeElement:           "ReferenceTimeCode",
	ReferenceVirtualElement:            "ReferenceVirtual",
	SamplingFrequencyElement:           "SamplingFrequency",
	SeekElement:                        "Seek",
	SeekHeadElement:                    "SeekHead",
	SeekIDElement:                      "SeekID",
	SeekPositionElement:                "SeekPosition",
	SeekPreRollElement:                 "SeekPreRoll",
	SegmentElement:                     "Segment",
	SegmentFamilyElement:               "SegmentFamily",
	SegmentFilenameElement:             "SegmentFilename",
	SegmentUIDElement:                  "SegmentUID",
	SilentTrackNumberElement:           "SilentTrackNumber",
	SilentTracksElement:                "SilentTracks",
	SimpleBlockElement:                 "SimpleBlock",
	SimpleTagElement:                   "SimpleTag",
	SliceDurationElement:               "SliceDuration",
	SlicesElement:                      "Slices",
	StereoModeElement:                  "StereoMode",
	TagAttachmentUIDElement:            "TagAttachmentUID",
	TagBinaryElement:                   "TagBinary",
	TagChapterUIDElement:               "TagChapterUID",
	TagDefaultElement:                  "TagDefault",
	TagEditionUIDElement:               "TagEditionUID",
	TagElement:                         "Tag",
	TagLanguageElement:                 "TagLanguage",
	TagLanguageIETFElement:             "TagLanguageIETF",
	TagNameElement:                     "TagName",
	TagStringElement:                   "TagString",
	TagTrackUIDElement:                 "TagTrackUID",
	TagsElement:                        "Tags",
	TargetTypeElement:                  "TargetType",
	TargetTypeValueElement:             "TargetTypeValue",
	TargetsElement:                     "Targets",
	TimeSliceElement:                   "TimeSlice",
	TimecodeElement:                    "Timecode",
	TimecodeScaleElement:               "TimecodeScale",
	TitleElement:                       "Title",
	TrackCombinePlanesElement:          "TrackCombinePlanes",
	TrackEntryElement:                  "TrackEntry",
	TrackJoinBlocksElement:             "TrackJoinBlocks",
	TrackJoinUIDElement:                "TrackJoinUID",
	TrackNumberElement:                 "TrackNumber",
	TrackOffsetElement:                 "TrackOffset",
	TrackOperationElement:              "TrackOperation",
	TrackOverlayElement:                "TrackOverlay",
	TrackPlaneElement:                  "TrackPlane",
	TrackPlaneTypeElement:              "TrackPlaneType",
	TrackPlaneUIDElement:               "TrackPlaneUID",
	TrackTimecodeScaleElement:          "TrackTimecodeScale",
	TrackTranslateCodecElement:         "TrackTranslateCodec",
	TrackTranslateEditionUIDElement:    "TrackTranslateEditionUID",
	TrackTranslateElement:              "TrackTranslate",
	TrackTranslateTrackIDElement:       "TrackTranslateTrackID",
	TrackTypeElement:                   "TrackType",
	TrackUIDElement:                    "TrackUID",
	TracksElement:                      "Tracks",
	TransferCharacteristicsElement:     "TransferCharacteristics",
	TrickMasterTrackSegmentUIDElement:  "TrickMasterTrackSegmentUID",
	TrickMasterTrackUIDElement:         "TrickMasterTrackUID",
	TrickTrackFlagElement:              "TrickTrackFlag",
	TrickTrackSegmentUIDElement:        "TrickTrackSegmentUID",
	TrickTrackUIDElement:               "TrickTrackUID",
	VideoElement:                       "Video",
	VoidElement:                        "Void",
	WhitePointChromaticityXElement:     "WhitePointChromaticityX",
	WhitePointChromaticityYElement:     "WhitePointChromaticityY",
	WritingAppElement:                  "WritingApp",
}

func isDescendantElement(p1, p2 ElementID) bool {
	switch p2 {
	case AttachedFileElement: // \Segment\Attachments\AttachedFile
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case FileDescriptionElement: // \Segment\Attachments\AttachedFile\FileDescription
			return true
		case FileNameElement: // \Segment\Attachments\AttachedFile\FileName
			return true
		case FileMimeTypeElement: // \Segment\Attachments\AttachedFile\FileMimeType
			return true
		case FileDataElement: // \Segment\Attachments\AttachedFile\FileData
			return true
		case FileUIDElement: // \Segment\Attachments\AttachedFile\FileUID
			return true
		case FileReferralElement: // \Segment\Attachments\AttachedFile\FileReferral
			return true
		case FileUsedStartTimeElement: // \Segment\Attachments\AttachedFile\FileUsedStartTime
			return true
		case FileUsedEndTimeElement: // \Segment\Attachments\AttachedFile\FileUsedEndTime
			return true
		default:
			return false
		}
	case AttachmentsElement: // \Segment\Attachments
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case AttachedFileElement: // \Segment\Attachments\AttachedFile
			return true
		case FileDescriptionElement: // \Segment\Attachments\AttachedFile\FileDescription
			return true
		case FileNameElement: // \Segment\Attachments\AttachedFile\FileName
			return true
		case FileMimeTypeElement: // \Segment\Attachments\AttachedFile\FileMimeType
			return true
		case FileDataElement: // \Segment\Attachments\AttachedFile\FileData
			return true
		case FileUIDElement: // \Segment\Attachments\AttachedFile\FileUID
			return true
		case FileReferralElement: // \Segment\Attachments\AttachedFile\FileReferral
			return true
		case FileUsedStartTimeElement: // \Segment\Attachments\AttachedFile\FileUsedStartTime
			return true
		case FileUsedEndTimeElement: // \Segment\Attachments\AttachedFile\FileUsedEndTime
			return true
		default:
			return false
		}
	case AudioElement: // \Segment\Tracks\TrackEntry\Audio
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case SamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\SamplingFrequency
			return true
		case OutputSamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\OutputSamplingFrequency
			return true
		case ChannelsElement: // \Segment\Tracks\TrackEntry\Audio\Channels
			return true
		case ChannelPositionsElement: // \Segment\Tracks\TrackEntry\Audio\ChannelPositions
			return true
		case BitDepthElement: // \Segment\Tracks\TrackEntry\Audio\BitDepth
			return true
		default:
			return false
		}
	case BlockAdditionsElement: // \Segment\Cluster\BlockGroup\BlockAdditions
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case BlockMoreElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore
			return true
		case BlockAddIDElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAddID
			return true
		case BlockAdditionalElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAdditional
			return true
		default:
			return false
		}
	case BlockGroupElement: // \Segment\Cluster\BlockGroup
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case BlockElement: // \Segment\Cluster\BlockGroup\Block
			return true
		case BlockVirtualElement: // \Segment\Cluster\BlockGroup\BlockVirtual
			return true
		case BlockAdditionsElement: // \Segment\Cluster\BlockGroup\BlockAdditions
			return true
		case BlockMoreElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore
			return true
		case BlockAddIDElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAddID
			return true
		case BlockAdditionalElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAdditional
			return true
		case BlockDurationElement: // \Segment\Cluster\BlockGroup\BlockDuration
			return true
		case ReferencePriorityElement: // \Segment\Cluster\BlockGroup\ReferencePriority
			return true
		case ReferenceBlockElement: // \Segment\Cluster\BlockGroup\ReferenceBlock
			return true
		case ReferenceVirtualElement: // \Segment\Cluster\BlockGroup\ReferenceVirtual
			return true
		case CodecStateElement: // \Segment\Cluster\BlockGroup\CodecState
			return true
		case DiscardPaddingElement: // \Segment\Cluster\BlockGroup\DiscardPadding
			return true
		case SlicesElement: // \Segment\Cluster\BlockGroup\Slices
			return true
		case TimeSliceElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice
			return true
		case LaceNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\LaceNumber
			return true
		case FrameNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\FrameNumber
			return true
		case BlockAdditionIDElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\BlockAdditionID
			return true
		case DelayElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\Delay
			return true
		case SliceDurationElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\SliceDuration
			return true
		case ReferenceFrameElement: // \Segment\Cluster\BlockGroup\ReferenceFrame
			return true
		case ReferenceOffsetElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceOffset
			return true
		case ReferenceTimeCodeElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceTimeCode
			return true
		default:
			return false
		}
	case BlockMoreElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case BlockAddIDElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAddID
			return true
		case BlockAdditionalElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAdditional
			return true
		default:
			return false
		}
	case ChapProcessCommandElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ChapProcessTimeElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessTime
			return true
		case ChapProcessDataElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessData
			return true
		default:
			return false
		}
	case ChapProcessElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ChapProcessCodecIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCodecID
			return true
		case ChapProcessPrivateElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessPrivate
			return true
		case ChapProcessCommandElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand
			return true
		case ChapProcessTimeElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessTime
			return true
		case ChapProcessDataElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessData
			return true
		default:
			return false
		}
	case ChapterAtomElement: // \Segment\Chapters\EditionEntry\ChapterAtom
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ChapterUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterUID
			return true
		case ChapterStringUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterStringUID
			return true
		case ChapterTimeStartElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeStart
			return true
		case ChapterTimeEndElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeEnd
			return true
		case ChapterFlagHiddenElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagHidden
			return true
		case ChapterFlagEnabledElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagEnabled
			return true
		case ChapterSegmentUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentUID
			return true
		case ChapterSegmentEditionUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentEditionUID
			return true
		case ChapterPhysicalEquivElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterPhysicalEquiv
			return true
		case ChapterTrackElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack
			return true
		case ChapterTrackNumberElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack\ChapterTrackNumber
			return true
		case ChapterDisplayElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay
			return true
		case ChapStringElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapString
			return true
		case ChapLanguageElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguage
			return true
		case ChapLanguageIETFElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguageIETF
			return true
		case ChapCountryElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapCountry
			return true
		case ChapProcessElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess
			return true
		case ChapProcessCodecIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCodecID
			return true
		case ChapProcessPrivateElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessPrivate
			return true
		case ChapProcessCommandElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand
			return true
		case ChapProcessTimeElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessTime
			return true
		case ChapProcessDataElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessData
			return true
		default:
			return false
		}
	case ChapterDisplayElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ChapStringElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapString
			return true
		case ChapLanguageElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguage
			return true
		case ChapLanguageIETFElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguageIETF
			return true
		case ChapCountryElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapCountry
			return true
		default:
			return false
		}
	case ChapterTrackElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ChapterTrackNumberElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack\ChapterTrackNumber
			return true
		default:
			return false
		}
	case ChapterTranslateElement: // \Segment\Info\ChapterTranslate
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ChapterTranslateEditionUIDElement: // \Segment\Info\ChapterTranslate\ChapterTranslateEditionUID
			return true
		case ChapterTranslateCodecElement: // \Segment\Info\ChapterTranslate\ChapterTranslateCodec
			return true
		case ChapterTranslateIDElement: // \Segment\Info\ChapterTranslate\ChapterTranslateID
			return true
		default:
			return false
		}
	case ChaptersElement: // \Segment\Chapters
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case EditionEntryElement: // \Segment\Chapters\EditionEntry
			return true
		case EditionUIDElement: // \Segment\Chapters\EditionEntry\EditionUID
			return true
		case EditionFlagHiddenElement: // \Segment\Chapters\EditionEntry\EditionFlagHidden
			return true
		case EditionFlagDefaultElement: // \Segment\Chapters\EditionEntry\EditionFlagDefault
			return true
		case EditionFlagOrderedElement: // \Segment\Chapters\EditionEntry\EditionFlagOrdered
			return true
		case ChapterAtomElement: // \Segment\Chapters\EditionEntry\ChapterAtom
			return true
		case ChapterUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterUID
			return true
		case ChapterStringUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterStringUID
			return true
		case ChapterTimeStartElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeStart
			return true
		case ChapterTimeEndElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeEnd
			return true
		case ChapterFlagHiddenElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagHidden
			return true
		case ChapterFlagEnabledElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagEnabled
			return true
		case ChapterSegmentUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentUID
			return true
		case ChapterSegmentEditionUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentEditionUID
			return true
		case ChapterPhysicalEquivElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterPhysicalEquiv
			return true
		case ChapterTrackElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack
			return true
		case ChapterTrackNumberElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack\ChapterTrackNumber
			return true
		case ChapterDisplayElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay
			return true
		case ChapStringElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapString
			return true
		case ChapLanguageElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguage
			return true
		case ChapLanguageIETFElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguageIETF
			return true
		case ChapCountryElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapCountry
			return true
		case ChapProcessElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess
			return true
		case ChapProcessCodecIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCodecID
			return true
		case ChapProcessPrivateElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessPrivate
			return true
		case ChapProcessCommandElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand
			return true
		case ChapProcessTimeElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessTime
			return true
		case ChapProcessDataElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessData
			return true
		default:
			return false
		}
	case ClusterElement: // \Segment\Cluster
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TimecodeElement: // \Segment\Cluster\Timecode
			return true
		case SilentTracksElement: // \Segment\Cluster\SilentTracks
			return true
		case SilentTrackNumberElement: // \Segment\Cluster\SilentTracks\SilentTrackNumber
			return true
		case PositionElement: // \Segment\Cluster\Position
			return true
		case PrevSizeElement: // \Segment\Cluster\PrevSize
			return true
		case SimpleBlockElement: // \Segment\Cluster\SimpleBlock
			return true
		case BlockGroupElement: // \Segment\Cluster\BlockGroup
			return true
		case BlockElement: // \Segment\Cluster\BlockGroup\Block
			return true
		case BlockVirtualElement: // \Segment\Cluster\BlockGroup\BlockVirtual
			return true
		case BlockAdditionsElement: // \Segment\Cluster\BlockGroup\BlockAdditions
			return true
		case BlockMoreElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore
			return true
		case BlockAddIDElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAddID
			return true
		case BlockAdditionalElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAdditional
			return true
		case BlockDurationElement: // \Segment\Cluster\BlockGroup\BlockDuration
			return true
		case ReferencePriorityElement: // \Segment\Cluster\BlockGroup\ReferencePriority
			return true
		case ReferenceBlockElement: // \Segment\Cluster\BlockGroup\ReferenceBlock
			return true
		case ReferenceVirtualElement: // \Segment\Cluster\BlockGroup\ReferenceVirtual
			return true
		case CodecStateElement: // \Segment\Cluster\BlockGroup\CodecState
			return true
		case DiscardPaddingElement: // \Segment\Cluster\BlockGroup\DiscardPadding
			return true
		case SlicesElement: // \Segment\Cluster\BlockGroup\Slices
			return true
		case TimeSliceElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice
			return true
		case LaceNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\LaceNumber
			return true
		case FrameNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\FrameNumber
			return true
		case BlockAdditionIDElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\BlockAdditionID
			return true
		case DelayElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\Delay
			return true
		case SliceDurationElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\SliceDuration
			return true
		case ReferenceFrameElement: // \Segment\Cluster\BlockGroup\ReferenceFrame
			return true
		case ReferenceOffsetElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceOffset
			return true
		case ReferenceTimeCodeElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceTimeCode
			return true
		case EncryptedBlockElement: // \Segment\Cluster\EncryptedBlock
			return true
		default:
			return false
		}
	case ColourElement: // \Segment\Tracks\TrackEntry\Video\Colour
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ColourSpaceElement: // \Segment\Tracks\TrackEntry\Video\ColourSpace
			return true
		case MatrixCoefficientsElement: // \Segment\Tracks\TrackEntry\Video\Colour\MatrixCoefficients
			return true
		case BitsPerChannelElement: // \Segment\Tracks\TrackEntry\Video\Colour\BitsPerChannel
			return true
		case ChromaSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingHorz
			return true
		case ChromaSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingVert
			return true
		case CbSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingHorz
			return true
		case CbSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingVert
			return true
		case ChromaSitingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingHorz
			return true
		case ChromaSitingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingVert
			return true
		case RangeElement: // \Segment\Tracks\TrackEntry\Video\Colour\Range
			return true
		case TransferCharacteristicsElement: // \Segment\Tracks\TrackEntry\Video\Colour\TransferCharacteristics
			return true
		case PrimariesElement: // \Segment\Tracks\TrackEntry\Video\Colour\Primaries
			return true
		case MaxCLLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxCLL
			return true
		case MaxFALLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxFALL
			return true
		case MasteringMetadataElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata
			return true
		case PrimaryRChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityX
			return true
		case PrimaryRChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityY
			return true
		case PrimaryGChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityX
			return true
		case PrimaryGChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityY
			return true
		case PrimaryBChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityX
			return true
		case PrimaryBChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityY
			return true
		case WhitePointChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityX
			return true
		case WhitePointChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityY
			return true
		case LuminanceMaxElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMax
			return true
		case LuminanceMinElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMin
			return true
		default:
			return false
		}
	case ContentCompressionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ContentCompAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompAlgo
			return true
		case ContentCompSettingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompSettings
			return true
		default:
			return false
		}
	case ContentEncodingElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ContentEncodingOrderElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingOrder
			return true
		case ContentEncodingScopeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingScope
			return true
		case ContentEncodingTypeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingType
			return true
		case ContentCompressionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression
			return true
		case ContentCompAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompAlgo
			return true
		case ContentCompSettingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompSettings
			return true
		case ContentEncryptionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption
			return true
		case ContentEncAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncAlgo
			return true
		case ContentEncKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncKeyID
			return true
		case ContentSignatureElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSignature
			return true
		case ContentSigKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigKeyID
			return true
		case ContentSigAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigAlgo
			return true
		case ContentSigHashAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigHashAlgo
			return true
		default:
			return false
		}
	case ContentEncodingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ContentEncodingElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding
			return true
		case ContentEncodingOrderElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingOrder
			return true
		case ContentEncodingScopeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingScope
			return true
		case ContentEncodingTypeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingType
			return true
		case ContentCompressionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression
			return true
		case ContentCompAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompAlgo
			return true
		case ContentCompSettingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompSettings
			return true
		case ContentEncryptionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption
			return true
		case ContentEncAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncAlgo
			return true
		case ContentEncKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncKeyID
			return true
		case ContentSignatureElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSignature
			return true
		case ContentSigKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigKeyID
			return true
		case ContentSigAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigAlgo
			return true
		case ContentSigHashAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigHashAlgo
			return true
		default:
			return false
		}
	case ContentEncryptionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ContentEncAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncAlgo
			return true
		case ContentEncKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncKeyID
			return true
		case ContentSignatureElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSignature
			return true
		case ContentSigKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigKeyID
			return true
		case ContentSigAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigAlgo
			return true
		case ContentSigHashAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigHashAlgo
			return true
		default:
			return false
		}
	case CuePointElement: // \Segment\Cues\CuePoint
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case CueTimeElement: // \Segment\Cues\CuePoint\CueTime
			return true
		case CueTrackPositionsElement: // \Segment\Cues\CuePoint\CueTrackPositions
			return true
		case CueTrackElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueTrack
			return true
		case CueClusterPositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueClusterPosition
			return true
		case CueRelativePositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueRelativePosition
			return true
		case CueDurationElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueDuration
			return true
		case CueBlockNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueBlockNumber
			return true
		case CueCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueCodecState
			return true
		case CueReferenceElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference
			return true
		case CueRefTimeElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefTime
			return true
		case CueRefClusterElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCluster
			return true
		case CueRefNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefNumber
			return true
		case CueRefCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCodecState
			return true
		default:
			return false
		}
	case CueReferenceElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case CueRefTimeElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefTime
			return true
		case CueRefClusterElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCluster
			return true
		case CueRefNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefNumber
			return true
		case CueRefCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCodecState
			return true
		default:
			return false
		}
	case CueTrackPositionsElement: // \Segment\Cues\CuePoint\CueTrackPositions
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case CueTrackElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueTrack
			return true
		case CueClusterPositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueClusterPosition
			return true
		case CueRelativePositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueRelativePosition
			return true
		case CueDurationElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueDuration
			return true
		case CueBlockNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueBlockNumber
			return true
		case CueCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueCodecState
			return true
		case CueReferenceElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference
			return true
		case CueRefTimeElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefTime
			return true
		case CueRefClusterElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCluster
			return true
		case CueRefNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefNumber
			return true
		case CueRefCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCodecState
			return true
		default:
			return false
		}
	case CuesElement: // \Segment\Cues
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case CuePointElement: // \Segment\Cues\CuePoint
			return true
		case CueTimeElement: // \Segment\Cues\CuePoint\CueTime
			return true
		case CueTrackPositionsElement: // \Segment\Cues\CuePoint\CueTrackPositions
			return true
		case CueTrackElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueTrack
			return true
		case CueClusterPositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueClusterPosition
			return true
		case CueRelativePositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueRelativePosition
			return true
		case CueDurationElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueDuration
			return true
		case CueBlockNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueBlockNumber
			return true
		case CueCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueCodecState
			return true
		case CueReferenceElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference
			return true
		case CueRefTimeElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefTime
			return true
		case CueRefClusterElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCluster
			return true
		case CueRefNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefNumber
			return true
		case CueRefCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCodecState
			return true
		default:
			return false
		}
	case DocTypeExtensionElement: // \EBML\DocTypeExtension
		switch p1 {
		case DocTypeExtensionNameElement: // \EBML\DocTypeExtension\DocTypeExtensionName
			return true
		case DocTypeExtensionVersionElement: // \EBML\DocTypeExtension\DocTypeExtensionVersion
			return true
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		default:
			return false
		}
	case EBMLElement: // \EBML
		switch p1 {
		case EBMLVersionElement: // \EBML\EBMLVersion
			return true
		case EBMLReadVersionElement: // \EBML\EBMLReadVersion
			return true
		case EBMLMaxIDLengthElement: // \EBML\EBMLMaxIDLength
			return true
		case EBMLMaxSizeLengthElement: // \EBML\EBMLMaxSizeLength
			return true
		case DocTypeElement: // \EBML\DocType
			return true
		case DocTypeVersionElement: // \EBML\DocTypeVersion
			return true
		case DocTypeReadVersionElement: // \EBML\DocTypeReadVersion
			return true
		case DocTypeExtensionElement: // \EBML\DocTypeExtension
			return true
		case DocTypeExtensionNameElement: // \EBML\DocTypeExtension\DocTypeExtensionName
			return true
		case DocTypeExtensionVersionElement: // \EBML\DocTypeExtension\DocTypeExtensionVersion
			return true
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		default:
			return false
		}
	case EditionEntryElement: // \Segment\Chapters\EditionEntry
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case EditionUIDElement: // \Segment\Chapters\EditionEntry\EditionUID
			return true
		case EditionFlagHiddenElement: // \Segment\Chapters\EditionEntry\EditionFlagHidden
			return true
		case EditionFlagDefaultElement: // \Segment\Chapters\EditionEntry\EditionFlagDefault
			return true
		case EditionFlagOrderedElement: // \Segment\Chapters\EditionEntry\EditionFlagOrdered
			return true
		case ChapterAtomElement: // \Segment\Chapters\EditionEntry\ChapterAtom
			return true
		case ChapterUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterUID
			return true
		case ChapterStringUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterStringUID
			return true
		case ChapterTimeStartElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeStart
			return true
		case ChapterTimeEndElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeEnd
			return true
		case ChapterFlagHiddenElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagHidden
			return true
		case ChapterFlagEnabledElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagEnabled
			return true
		case ChapterSegmentUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentUID
			return true
		case ChapterSegmentEditionUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentEditionUID
			return true
		case ChapterPhysicalEquivElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterPhysicalEquiv
			return true
		case ChapterTrackElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack
			return true
		case ChapterTrackNumberElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack\ChapterTrackNumber
			return true
		case ChapterDisplayElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay
			return true
		case ChapStringElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapString
			return true
		case ChapLanguageElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguage
			return true
		case ChapLanguageIETFElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguageIETF
			return true
		case ChapCountryElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapCountry
			return true
		case ChapProcessElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess
			return true
		case ChapProcessCodecIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCodecID
			return true
		case ChapProcessPrivateElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessPrivate
			return true
		case ChapProcessCommandElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand
			return true
		case ChapProcessTimeElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessTime
			return true
		case ChapProcessDataElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessData
			return true
		default:
			return false
		}
	case InfoElement: // \Segment\Info
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case SegmentUIDElement: // \Segment\Info\SegmentUID
			return true
		case SegmentFilenameElement: // \Segment\Info\SegmentFilename
			return true
		case PrevUIDElement: // \Segment\Info\PrevUID
			return true
		case PrevFilenameElement: // \Segment\Info\PrevFilename
			return true
		case NextUIDElement: // \Segment\Info\NextUID
			return true
		case NextFilenameElement: // \Segment\Info\NextFilename
			return true
		case SegmentFamilyElement: // \Segment\Info\SegmentFamily
			return true
		case ChapterTranslateElement: // \Segment\Info\ChapterTranslate
			return true
		case ChapterTranslateEditionUIDElement: // \Segment\Info\ChapterTranslate\ChapterTranslateEditionUID
			return true
		case ChapterTranslateCodecElement: // \Segment\Info\ChapterTranslate\ChapterTranslateCodec
			return true
		case ChapterTranslateIDElement: // \Segment\Info\ChapterTranslate\ChapterTranslateID
			return true
		case TimecodeScaleElement: // \Segment\Info\TimecodeScale
			return true
		case DurationElement: // \Segment\Info\Duration
			return true
		case DateUTCElement: // \Segment\Info\DateUTC
			return true
		case TitleElement: // \Segment\Info\Title
			return true
		case MuxingAppElement: // \Segment\Info\MuxingApp
			return true
		case WritingAppElement: // \Segment\Info\WritingApp
			return true
		default:
			return false
		}
	case MasteringMetadataElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case PrimaryRChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityX
			return true
		case PrimaryRChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityY
			return true
		case PrimaryGChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityX
			return true
		case PrimaryGChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityY
			return true
		case PrimaryBChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityX
			return true
		case PrimaryBChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityY
			return true
		case WhitePointChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityX
			return true
		case WhitePointChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityY
			return true
		case LuminanceMaxElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMax
			return true
		case LuminanceMinElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMin
			return true
		default:
			return false
		}
	case ProjectionElement: // \Segment\Tracks\TrackEntry\Video\Projection
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ProjectionTypeElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionType
			return true
		case ProjectionPrivateElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPrivate
			return true
		case ProjectionPoseYawElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseYaw
			return true
		case ProjectionPosePitchElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPosePitch
			return true
		case ProjectionPoseRollElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseRoll
			return true
		default:
			return false
		}
	case ReferenceFrameElement: // \Segment\Cluster\BlockGroup\ReferenceFrame
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case ReferenceOffsetElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceOffset
			return true
		case ReferenceTimeCodeElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceTimeCode
			return true
		default:
			return false
		}
	case SeekElement: // \Segment\SeekHead\Seek
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case SeekIDElement: // \Segment\SeekHead\Seek\SeekID
			return true
		case SeekPositionElement: // \Segment\SeekHead\Seek\SeekPosition
			return true
		default:
			return false
		}
	case SeekHeadElement: // \Segment\SeekHead
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case SeekElement: // \Segment\SeekHead\Seek
			return true
		case SeekIDElement: // \Segment\SeekHead\Seek\SeekID
			return true
		case SeekPositionElement: // \Segment\SeekHead\Seek\SeekPosition
			return true
		default:
			return false
		}
	case SegmentElement: // \Segment
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case SeekHeadElement: // \Segment\SeekHead
			return true
		case SeekElement: // \Segment\SeekHead\Seek
			return true
		case SeekIDElement: // \Segment\SeekHead\Seek\SeekID
			return true
		case SeekPositionElement: // \Segment\SeekHead\Seek\SeekPosition
			return true
		case InfoElement: // \Segment\Info
			return true
		case SegmentUIDElement: // \Segment\Info\SegmentUID
			return true
		case SegmentFilenameElement: // \Segment\Info\SegmentFilename
			return true
		case PrevUIDElement: // \Segment\Info\PrevUID
			return true
		case PrevFilenameElement: // \Segment\Info\PrevFilename
			return true
		case NextUIDElement: // \Segment\Info\NextUID
			return true
		case NextFilenameElement: // \Segment\Info\NextFilename
			return true
		case SegmentFamilyElement: // \Segment\Info\SegmentFamily
			return true
		case ChapterTranslateElement: // \Segment\Info\ChapterTranslate
			return true
		case ChapterTranslateEditionUIDElement: // \Segment\Info\ChapterTranslate\ChapterTranslateEditionUID
			return true
		case ChapterTranslateCodecElement: // \Segment\Info\ChapterTranslate\ChapterTranslateCodec
			return true
		case ChapterTranslateIDElement: // \Segment\Info\ChapterTranslate\ChapterTranslateID
			return true
		case TimecodeScaleElement: // \Segment\Info\TimecodeScale
			return true
		case DurationElement: // \Segment\Info\Duration
			return true
		case DateUTCElement: // \Segment\Info\DateUTC
			return true
		case TitleElement: // \Segment\Info\Title
			return true
		case MuxingAppElement: // \Segment\Info\MuxingApp
			return true
		case WritingAppElement: // \Segment\Info\WritingApp
			return true
		case ClusterElement: // \Segment\Cluster
			return true
		case TimecodeElement: // \Segment\Cluster\Timecode
			return true
		case SilentTracksElement: // \Segment\Cluster\SilentTracks
			return true
		case SilentTrackNumberElement: // \Segment\Cluster\SilentTracks\SilentTrackNumber
			return true
		case PositionElement: // \Segment\Cluster\Position
			return true
		case PrevSizeElement: // \Segment\Cluster\PrevSize
			return true
		case SimpleBlockElement: // \Segment\Cluster\SimpleBlock
			return true
		case BlockGroupElement: // \Segment\Cluster\BlockGroup
			return true
		case BlockElement: // \Segment\Cluster\BlockGroup\Block
			return true
		case BlockVirtualElement: // \Segment\Cluster\BlockGroup\BlockVirtual
			return true
		case BlockAdditionsElement: // \Segment\Cluster\BlockGroup\BlockAdditions
			return true
		case BlockMoreElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore
			return true
		case BlockAddIDElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAddID
			return true
		case BlockAdditionalElement: // \Segment\Cluster\BlockGroup\BlockAdditions\BlockMore\BlockAdditional
			return true
		case BlockDurationElement: // \Segment\Cluster\BlockGroup\BlockDuration
			return true
		case ReferencePriorityElement: // \Segment\Cluster\BlockGroup\ReferencePriority
			return true
		case ReferenceBlockElement: // \Segment\Cluster\BlockGroup\ReferenceBlock
			return true
		case ReferenceVirtualElement: // \Segment\Cluster\BlockGroup\ReferenceVirtual
			return true
		case CodecStateElement: // \Segment\Cluster\BlockGroup\CodecState
			return true
		case DiscardPaddingElement: // \Segment\Cluster\BlockGroup\DiscardPadding
			return true
		case SlicesElement: // \Segment\Cluster\BlockGroup\Slices
			return true
		case TimeSliceElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice
			return true
		case LaceNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\LaceNumber
			return true
		case FrameNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\FrameNumber
			return true
		case BlockAdditionIDElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\BlockAdditionID
			return true
		case DelayElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\Delay
			return true
		case SliceDurationElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\SliceDuration
			return true
		case ReferenceFrameElement: // \Segment\Cluster\BlockGroup\ReferenceFrame
			return true
		case ReferenceOffsetElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceOffset
			return true
		case ReferenceTimeCodeElement: // \Segment\Cluster\BlockGroup\ReferenceFrame\ReferenceTimeCode
			return true
		case EncryptedBlockElement: // \Segment\Cluster\EncryptedBlock
			return true
		case TracksElement: // \Segment\Tracks
			return true
		case TrackEntryElement: // \Segment\Tracks\TrackEntry
			return true
		case TrackNumberElement: // \Segment\Tracks\TrackEntry\TrackNumber
			return true
		case TrackUIDElement: // \Segment\Tracks\TrackEntry\TrackUID
			return true
		case TrackTypeElement: // \Segment\Tracks\TrackEntry\TrackType
			return true
		case FlagEnabledElement: // \Segment\Tracks\TrackEntry\FlagEnabled
			return true
		case FlagDefaultElement: // \Segment\Tracks\TrackEntry\FlagDefault
			return true
		case FlagForcedElement: // \Segment\Tracks\TrackEntry\FlagForced
			return true
		case FlagLacingElement: // \Segment\Tracks\TrackEntry\FlagLacing
			return true
		case MinCacheElement: // \Segment\Tracks\TrackEntry\MinCache
			return true
		case MaxCacheElement: // \Segment\Tracks\TrackEntry\MaxCache
			return true
		case DefaultDurationElement: // \Segment\Tracks\TrackEntry\DefaultDuration
			return true
		case DefaultDecodedFieldDurationElement: // \Segment\Tracks\TrackEntry\DefaultDecodedFieldDuration
			return true
		case TrackTimecodeScaleElement: // \Segment\Tracks\TrackEntry\TrackTimecodeScale
			return true
		case TrackOffsetElement: // \Segment\Tracks\TrackEntry\TrackOffset
			return true
		case MaxBlockAdditionIDElement: // \Segment\Tracks\TrackEntry\MaxBlockAdditionID
			return true
		case NameElement: // \Segment\Tracks\TrackEntry\Name
			return true
		case LanguageElement: // \Segment\Tracks\TrackEntry\Language
			return true
		case LanguageIETFElement: // \Segment\Tracks\TrackEntry\LanguageIETF
			return true
		case CodecIDElement: // \Segment\Tracks\TrackEntry\CodecID
			return true
		case CodecPrivateElement: // \Segment\Tracks\TrackEntry\CodecPrivate
			return true
		case CodecNameElement: // \Segment\Tracks\TrackEntry\CodecName
			return true
		case AttachmentLinkElement: // \Segment\Tracks\TrackEntry\AttachmentLink
			return true
		case CodecSettingsElement: // \Segment\Tracks\TrackEntry\CodecSettings
			return true
		case CodecInfoURLElement: // \Segment\Tracks\TrackEntry\CodecInfoURL
			return true
		case CodecDownloadURLElement: // \Segment\Tracks\TrackEntry\CodecDownloadURL
			return true
		case CodecDecodeAllElement: // \Segment\Tracks\TrackEntry\CodecDecodeAll
			return true
		case TrackOverlayElement: // \Segment\Tracks\TrackEntry\TrackOverlay
			return true
		case CodecDelayElement: // \Segment\Tracks\TrackEntry\CodecDelay
			return true
		case SeekPreRollElement: // \Segment\Tracks\TrackEntry\SeekPreRoll
			return true
		case TrackTranslateElement: // \Segment\Tracks\TrackEntry\TrackTranslate
			return true
		case TrackTranslateEditionUIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateEditionUID
			return true
		case TrackTranslateCodecElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateCodec
			return true
		case TrackTranslateTrackIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateTrackID
			return true
		case VideoElement: // \Segment\Tracks\TrackEntry\Video
			return true
		case FlagInterlacedElement: // \Segment\Tracks\TrackEntry\Video\FlagInterlaced
			return true
		case FieldOrderElement: // \Segment\Tracks\TrackEntry\Video\FieldOrder
			return true
		case StereoModeElement: // \Segment\Tracks\TrackEntry\Video\StereoMode
			return true
		case AlphaModeElement: // \Segment\Tracks\TrackEntry\Video\AlphaMode
			return true
		case OldStereoModeElement: // \Segment\Tracks\TrackEntry\Video\OldStereoMode
			return true
		case PixelWidthElement: // \Segment\Tracks\TrackEntry\Video\PixelWidth
			return true
		case PixelHeightElement: // \Segment\Tracks\TrackEntry\Video\PixelHeight
			return true
		case PixelCropBottomElement: // \Segment\Tracks\TrackEntry\Video\PixelCropBottom
			return true
		case PixelCropTopElement: // \Segment\Tracks\TrackEntry\Video\PixelCropTop
			return true
		case PixelCropLeftElement: // \Segment\Tracks\TrackEntry\Video\PixelCropLeft
			return true
		case PixelCropRightElement: // \Segment\Tracks\TrackEntry\Video\PixelCropRight
			return true
		case DisplayWidthElement: // \Segment\Tracks\TrackEntry\Video\DisplayWidth
			return true
		case DisplayHeightElement: // \Segment\Tracks\TrackEntry\Video\DisplayHeight
			return true
		case DisplayUnitElement: // \Segment\Tracks\TrackEntry\Video\DisplayUnit
			return true
		case AspectRatioTypeElement: // \Segment\Tracks\TrackEntry\Video\AspectRatioType
			return true
		case ColourSpaceElement: // \Segment\Tracks\TrackEntry\Video\ColourSpace
			return true
		case GammaValueElement: // \Segment\Tracks\TrackEntry\Video\GammaValue
			return true
		case FrameRateElement: // \Segment\Tracks\TrackEntry\Video\FrameRate
			return true
		case ColourElement: // \Segment\Tracks\TrackEntry\Video\Colour
			return true
		case MatrixCoefficientsElement: // \Segment\Tracks\TrackEntry\Video\Colour\MatrixCoefficients
			return true
		case BitsPerChannelElement: // \Segment\Tracks\TrackEntry\Video\Colour\BitsPerChannel
			return true
		case ChromaSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingHorz
			return true
		case ChromaSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingVert
			return true
		case CbSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingHorz
			return true
		case CbSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingVert
			return true
		case ChromaSitingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingHorz
			return true
		case ChromaSitingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingVert
			return true
		case RangeElement: // \Segment\Tracks\TrackEntry\Video\Colour\Range
			return true
		case TransferCharacteristicsElement: // \Segment\Tracks\TrackEntry\Video\Colour\TransferCharacteristics
			return true
		case PrimariesElement: // \Segment\Tracks\TrackEntry\Video\Colour\Primaries
			return true
		case MaxCLLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxCLL
			return true
		case MaxFALLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxFALL
			return true
		case MasteringMetadataElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata
			return true
		case PrimaryRChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityX
			return true
		case PrimaryRChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityY
			return true
		case PrimaryGChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityX
			return true
		case PrimaryGChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityY
			return true
		case PrimaryBChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityX
			return true
		case PrimaryBChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityY
			return true
		case WhitePointChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityX
			return true
		case WhitePointChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityY
			return true
		case LuminanceMaxElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMax
			return true
		case LuminanceMinElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMin
			return true
		case ProjectionElement: // \Segment\Tracks\TrackEntry\Video\Projection
			return true
		case ProjectionTypeElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionType
			return true
		case ProjectionPrivateElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPrivate
			return true
		case ProjectionPoseYawElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseYaw
			return true
		case ProjectionPosePitchElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPosePitch
			return true
		case ProjectionPoseRollElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseRoll
			return true
		case AudioElement: // \Segment\Tracks\TrackEntry\Audio
			return true
		case SamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\SamplingFrequency
			return true
		case OutputSamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\OutputSamplingFrequency
			return true
		case ChannelsElement: // \Segment\Tracks\TrackEntry\Audio\Channels
			return true
		case ChannelPositionsElement: // \Segment\Tracks\TrackEntry\Audio\ChannelPositions
			return true
		case BitDepthElement: // \Segment\Tracks\TrackEntry\Audio\BitDepth
			return true
		case TrackOperationElement: // \Segment\Tracks\TrackEntry\TrackOperation
			return true
		case TrackCombinePlanesElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes
			return true
		case TrackPlaneElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane
			return true
		case TrackPlaneUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneUID
			return true
		case TrackPlaneTypeElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneType
			return true
		case TrackJoinBlocksElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks
			return true
		case TrackJoinUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks\TrackJoinUID
			return true
		case TrickTrackUIDElement: // \Segment\Tracks\TrackEntry\TrickTrackUID
			return true
		case TrickTrackSegmentUIDElement: // \Segment\Tracks\TrackEntry\TrickTrackSegmentUID
			return true
		case TrickTrackFlagElement: // \Segment\Tracks\TrackEntry\TrickTrackFlag
			return true
		case TrickMasterTrackUIDElement: // \Segment\Tracks\TrackEntry\TrickMasterTrackUID
			return true
		case TrickMasterTrackSegmentUIDElement: // \Segment\Tracks\TrackEntry\TrickMasterTrackSegmentUID
			return true
		case ContentEncodingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings
			return true
		case ContentEncodingElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding
			return true
		case ContentEncodingOrderElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingOrder
			return true
		case ContentEncodingScopeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingScope
			return true
		case ContentEncodingTypeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingType
			return true
		case ContentCompressionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression
			return true
		case ContentCompAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompAlgo
			return true
		case ContentCompSettingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompSettings
			return true
		case ContentEncryptionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption
			return true
		case ContentEncAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncAlgo
			return true
		case ContentEncKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncKeyID
			return true
		case ContentSignatureElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSignature
			return true
		case ContentSigKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigKeyID
			return true
		case ContentSigAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigAlgo
			return true
		case ContentSigHashAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigHashAlgo
			return true
		case CuesElement: // \Segment\Cues
			return true
		case CuePointElement: // \Segment\Cues\CuePoint
			return true
		case CueTimeElement: // \Segment\Cues\CuePoint\CueTime
			return true
		case CueTrackPositionsElement: // \Segment\Cues\CuePoint\CueTrackPositions
			return true
		case CueTrackElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueTrack
			return true
		case CueClusterPositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueClusterPosition
			return true
		case CueRelativePositionElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueRelativePosition
			return true
		case CueDurationElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueDuration
			return true
		case CueBlockNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueBlockNumber
			return true
		case CueCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueCodecState
			return true
		case CueReferenceElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference
			return true
		case CueRefTimeElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefTime
			return true
		case CueRefClusterElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCluster
			return true
		case CueRefNumberElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefNumber
			return true
		case CueRefCodecStateElement: // \Segment\Cues\CuePoint\CueTrackPositions\CueReference\CueRefCodecState
			return true
		case AttachmentsElement: // \Segment\Attachments
			return true
		case AttachedFileElement: // \Segment\Attachments\AttachedFile
			return true
		case FileDescriptionElement: // \Segment\Attachments\AttachedFile\FileDescription
			return true
		case FileNameElement: // \Segment\Attachments\AttachedFile\FileName
			return true
		case FileMimeTypeElement: // \Segment\Attachments\AttachedFile\FileMimeType
			return true
		case FileDataElement: // \Segment\Attachments\AttachedFile\FileData
			return true
		case FileUIDElement: // \Segment\Attachments\AttachedFile\FileUID
			return true
		case FileReferralElement: // \Segment\Attachments\AttachedFile\FileReferral
			return true
		case FileUsedStartTimeElement: // \Segment\Attachments\AttachedFile\FileUsedStartTime
			return true
		case FileUsedEndTimeElement: // \Segment\Attachments\AttachedFile\FileUsedEndTime
			return true
		case ChaptersElement: // \Segment\Chapters
			return true
		case EditionEntryElement: // \Segment\Chapters\EditionEntry
			return true
		case EditionUIDElement: // \Segment\Chapters\EditionEntry\EditionUID
			return true
		case EditionFlagHiddenElement: // \Segment\Chapters\EditionEntry\EditionFlagHidden
			return true
		case EditionFlagDefaultElement: // \Segment\Chapters\EditionEntry\EditionFlagDefault
			return true
		case EditionFlagOrderedElement: // \Segment\Chapters\EditionEntry\EditionFlagOrdered
			return true
		case ChapterAtomElement: // \Segment\Chapters\EditionEntry\ChapterAtom
			return true
		case ChapterUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterUID
			return true
		case ChapterStringUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterStringUID
			return true
		case ChapterTimeStartElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeStart
			return true
		case ChapterTimeEndElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTimeEnd
			return true
		case ChapterFlagHiddenElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagHidden
			return true
		case ChapterFlagEnabledElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterFlagEnabled
			return true
		case ChapterSegmentUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentUID
			return true
		case ChapterSegmentEditionUIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterSegmentEditionUID
			return true
		case ChapterPhysicalEquivElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterPhysicalEquiv
			return true
		case ChapterTrackElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack
			return true
		case ChapterTrackNumberElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterTrack\ChapterTrackNumber
			return true
		case ChapterDisplayElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay
			return true
		case ChapStringElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapString
			return true
		case ChapLanguageElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguage
			return true
		case ChapLanguageIETFElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapLanguageIETF
			return true
		case ChapCountryElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapterDisplay\ChapCountry
			return true
		case ChapProcessElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess
			return true
		case ChapProcessCodecIDElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCodecID
			return true
		case ChapProcessPrivateElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessPrivate
			return true
		case ChapProcessCommandElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand
			return true
		case ChapProcessTimeElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessTime
			return true
		case ChapProcessDataElement: // \Segment\Chapters\EditionEntry\ChapterAtom\ChapProcess\ChapProcessCommand\ChapProcessData
			return true
		case TagsElement: // \Segment\Tags
			return true
		case TagElement: // \Segment\Tags\Tag
			return true
		case TargetsElement: // \Segment\Tags\Tag\Targets
			return true
		case TargetTypeValueElement: // \Segment\Tags\Tag\Targets\TargetTypeValue
			return true
		case TargetTypeElement: // \Segment\Tags\Tag\Targets\TargetType
			return true
		case TagTrackUIDElement: // \Segment\Tags\Tag\Targets\TagTrackUID
			return true
		case TagEditionUIDElement: // \Segment\Tags\Tag\Targets\TagEditionUID
			return true
		case TagChapterUIDElement: // \Segment\Tags\Tag\Targets\TagChapterUID
			return true
		case TagAttachmentUIDElement: // \Segment\Tags\Tag\Targets\TagAttachmentUID
			return true
		case SimpleTagElement: // \Segment\Tags\Tag\SimpleTag
			return true
		case TagNameElement: // \Segment\Tags\Tag\SimpleTag\TagName
			return true
		case TagLanguageElement: // \Segment\Tags\Tag\SimpleTag\TagLanguage
			return true
		case TagLanguageIETFElement: // \Segment\Tags\Tag\SimpleTag\TagLanguageIETF
			return true
		case TagDefaultElement: // \Segment\Tags\Tag\SimpleTag\TagDefault
			return true
		case TagStringElement: // \Segment\Tags\Tag\SimpleTag\TagString
			return true
		case TagBinaryElement: // \Segment\Tags\Tag\SimpleTag\TagBinary
			return true
		default:
			return false
		}
	case SilentTracksElement: // \Segment\Cluster\SilentTracks
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case SilentTrackNumberElement: // \Segment\Cluster\SilentTracks\SilentTrackNumber
			return true
		default:
			return false
		}
	case SimpleTagElement: // \Segment\Tags\Tag\SimpleTag
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TagNameElement: // \Segment\Tags\Tag\SimpleTag\TagName
			return true
		case TagLanguageElement: // \Segment\Tags\Tag\SimpleTag\TagLanguage
			return true
		case TagLanguageIETFElement: // \Segment\Tags\Tag\SimpleTag\TagLanguageIETF
			return true
		case TagDefaultElement: // \Segment\Tags\Tag\SimpleTag\TagDefault
			return true
		case TagStringElement: // \Segment\Tags\Tag\SimpleTag\TagString
			return true
		case TagBinaryElement: // \Segment\Tags\Tag\SimpleTag\TagBinary
			return true
		default:
			return false
		}
	case SlicesElement: // \Segment\Cluster\BlockGroup\Slices
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TimeSliceElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice
			return true
		case LaceNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\LaceNumber
			return true
		case FrameNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\FrameNumber
			return true
		case BlockAdditionIDElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\BlockAdditionID
			return true
		case DelayElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\Delay
			return true
		case SliceDurationElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\SliceDuration
			return true
		default:
			return false
		}
	case TagElement: // \Segment\Tags\Tag
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TargetsElement: // \Segment\Tags\Tag\Targets
			return true
		case TargetTypeValueElement: // \Segment\Tags\Tag\Targets\TargetTypeValue
			return true
		case TargetTypeElement: // \Segment\Tags\Tag\Targets\TargetType
			return true
		case TagTrackUIDElement: // \Segment\Tags\Tag\Targets\TagTrackUID
			return true
		case TagEditionUIDElement: // \Segment\Tags\Tag\Targets\TagEditionUID
			return true
		case TagChapterUIDElement: // \Segment\Tags\Tag\Targets\TagChapterUID
			return true
		case TagAttachmentUIDElement: // \Segment\Tags\Tag\Targets\TagAttachmentUID
			return true
		case SimpleTagElement: // \Segment\Tags\Tag\SimpleTag
			return true
		case TagNameElement: // \Segment\Tags\Tag\SimpleTag\TagName
			return true
		case TagLanguageElement: // \Segment\Tags\Tag\SimpleTag\TagLanguage
			return true
		case TagLanguageIETFElement: // \Segment\Tags\Tag\SimpleTag\TagLanguageIETF
			return true
		case TagDefaultElement: // \Segment\Tags\Tag\SimpleTag\TagDefault
			return true
		case TagStringElement: // \Segment\Tags\Tag\SimpleTag\TagString
			return true
		case TagBinaryElement: // \Segment\Tags\Tag\SimpleTag\TagBinary
			return true
		default:
			return false
		}
	case TagsElement: // \Segment\Tags
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TagElement: // \Segment\Tags\Tag
			return true
		case TargetsElement: // \Segment\Tags\Tag\Targets
			return true
		case TargetTypeValueElement: // \Segment\Tags\Tag\Targets\TargetTypeValue
			return true
		case TargetTypeElement: // \Segment\Tags\Tag\Targets\TargetType
			return true
		case TagTrackUIDElement: // \Segment\Tags\Tag\Targets\TagTrackUID
			return true
		case TagEditionUIDElement: // \Segment\Tags\Tag\Targets\TagEditionUID
			return true
		case TagChapterUIDElement: // \Segment\Tags\Tag\Targets\TagChapterUID
			return true
		case TagAttachmentUIDElement: // \Segment\Tags\Tag\Targets\TagAttachmentUID
			return true
		case SimpleTagElement: // \Segment\Tags\Tag\SimpleTag
			return true
		case TagNameElement: // \Segment\Tags\Tag\SimpleTag\TagName
			return true
		case TagLanguageElement: // \Segment\Tags\Tag\SimpleTag\TagLanguage
			return true
		case TagLanguageIETFElement: // \Segment\Tags\Tag\SimpleTag\TagLanguageIETF
			return true
		case TagDefaultElement: // \Segment\Tags\Tag\SimpleTag\TagDefault
			return true
		case TagStringElement: // \Segment\Tags\Tag\SimpleTag\TagString
			return true
		case TagBinaryElement: // \Segment\Tags\Tag\SimpleTag\TagBinary
			return true
		default:
			return false
		}
	case TargetsElement: // \Segment\Tags\Tag\Targets
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TargetTypeValueElement: // \Segment\Tags\Tag\Targets\TargetTypeValue
			return true
		case TargetTypeElement: // \Segment\Tags\Tag\Targets\TargetType
			return true
		case TagTrackUIDElement: // \Segment\Tags\Tag\Targets\TagTrackUID
			return true
		case TagEditionUIDElement: // \Segment\Tags\Tag\Targets\TagEditionUID
			return true
		case TagChapterUIDElement: // \Segment\Tags\Tag\Targets\TagChapterUID
			return true
		case TagAttachmentUIDElement: // \Segment\Tags\Tag\Targets\TagAttachmentUID
			return true
		default:
			return false
		}
	case TimeSliceElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case LaceNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\LaceNumber
			return true
		case FrameNumberElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\FrameNumber
			return true
		case BlockAdditionIDElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\BlockAdditionID
			return true
		case DelayElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\Delay
			return true
		case SliceDurationElement: // \Segment\Cluster\BlockGroup\Slices\TimeSlice\SliceDuration
			return true
		default:
			return false
		}
	case TrackCombinePlanesElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackPlaneElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane
			return true
		case TrackPlaneUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneUID
			return true
		case TrackPlaneTypeElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneType
			return true
		default:
			return false
		}
	case TrackEntryElement: // \Segment\Tracks\TrackEntry
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackNumberElement: // \Segment\Tracks\TrackEntry\TrackNumber
			return true
		case TrackUIDElement: // \Segment\Tracks\TrackEntry\TrackUID
			return true
		case TrackTypeElement: // \Segment\Tracks\TrackEntry\TrackType
			return true
		case FlagEnabledElement: // \Segment\Tracks\TrackEntry\FlagEnabled
			return true
		case FlagDefaultElement: // \Segment\Tracks\TrackEntry\FlagDefault
			return true
		case FlagForcedElement: // \Segment\Tracks\TrackEntry\FlagForced
			return true
		case FlagLacingElement: // \Segment\Tracks\TrackEntry\FlagLacing
			return true
		case MinCacheElement: // \Segment\Tracks\TrackEntry\MinCache
			return true
		case MaxCacheElement: // \Segment\Tracks\TrackEntry\MaxCache
			return true
		case DefaultDurationElement: // \Segment\Tracks\TrackEntry\DefaultDuration
			return true
		case DefaultDecodedFieldDurationElement: // \Segment\Tracks\TrackEntry\DefaultDecodedFieldDuration
			return true
		case TrackTimecodeScaleElement: // \Segment\Tracks\TrackEntry\TrackTimecodeScale
			return true
		case TrackOffsetElement: // \Segment\Tracks\TrackEntry\TrackOffset
			return true
		case MaxBlockAdditionIDElement: // \Segment\Tracks\TrackEntry\MaxBlockAdditionID
			return true
		case NameElement: // \Segment\Tracks\TrackEntry\Name
			return true
		case LanguageElement: // \Segment\Tracks\TrackEntry\Language
			return true
		case LanguageIETFElement: // \Segment\Tracks\TrackEntry\LanguageIETF
			return true
		case CodecIDElement: // \Segment\Tracks\TrackEntry\CodecID
			return true
		case CodecPrivateElement: // \Segment\Tracks\TrackEntry\CodecPrivate
			return true
		case CodecNameElement: // \Segment\Tracks\TrackEntry\CodecName
			return true
		case AttachmentLinkElement: // \Segment\Tracks\TrackEntry\AttachmentLink
			return true
		case CodecSettingsElement: // \Segment\Tracks\TrackEntry\CodecSettings
			return true
		case CodecInfoURLElement: // \Segment\Tracks\TrackEntry\CodecInfoURL
			return true
		case CodecDownloadURLElement: // \Segment\Tracks\TrackEntry\CodecDownloadURL
			return true
		case CodecDecodeAllElement: // \Segment\Tracks\TrackEntry\CodecDecodeAll
			return true
		case TrackOverlayElement: // \Segment\Tracks\TrackEntry\TrackOverlay
			return true
		case CodecDelayElement: // \Segment\Tracks\TrackEntry\CodecDelay
			return true
		case SeekPreRollElement: // \Segment\Tracks\TrackEntry\SeekPreRoll
			return true
		case TrackTranslateElement: // \Segment\Tracks\TrackEntry\TrackTranslate
			return true
		case TrackTranslateEditionUIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateEditionUID
			return true
		case TrackTranslateCodecElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateCodec
			return true
		case TrackTranslateTrackIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateTrackID
			return true
		case VideoElement: // \Segment\Tracks\TrackEntry\Video
			return true
		case FlagInterlacedElement: // \Segment\Tracks\TrackEntry\Video\FlagInterlaced
			return true
		case FieldOrderElement: // \Segment\Tracks\TrackEntry\Video\FieldOrder
			return true
		case StereoModeElement: // \Segment\Tracks\TrackEntry\Video\StereoMode
			return true
		case AlphaModeElement: // \Segment\Tracks\TrackEntry\Video\AlphaMode
			return true
		case OldStereoModeElement: // \Segment\Tracks\TrackEntry\Video\OldStereoMode
			return true
		case PixelWidthElement: // \Segment\Tracks\TrackEntry\Video\PixelWidth
			return true
		case PixelHeightElement: // \Segment\Tracks\TrackEntry\Video\PixelHeight
			return true
		case PixelCropBottomElement: // \Segment\Tracks\TrackEntry\Video\PixelCropBottom
			return true
		case PixelCropTopElement: // \Segment\Tracks\TrackEntry\Video\PixelCropTop
			return true
		case PixelCropLeftElement: // \Segment\Tracks\TrackEntry\Video\PixelCropLeft
			return true
		case PixelCropRightElement: // \Segment\Tracks\TrackEntry\Video\PixelCropRight
			return true
		case DisplayWidthElement: // \Segment\Tracks\TrackEntry\Video\DisplayWidth
			return true
		case DisplayHeightElement: // \Segment\Tracks\TrackEntry\Video\DisplayHeight
			return true
		case DisplayUnitElement: // \Segment\Tracks\TrackEntry\Video\DisplayUnit
			return true
		case AspectRatioTypeElement: // \Segment\Tracks\TrackEntry\Video\AspectRatioType
			return true
		case ColourSpaceElement: // \Segment\Tracks\TrackEntry\Video\ColourSpace
			return true
		case GammaValueElement: // \Segment\Tracks\TrackEntry\Video\GammaValue
			return true
		case FrameRateElement: // \Segment\Tracks\TrackEntry\Video\FrameRate
			return true
		case ColourElement: // \Segment\Tracks\TrackEntry\Video\Colour
			return true
		case MatrixCoefficientsElement: // \Segment\Tracks\TrackEntry\Video\Colour\MatrixCoefficients
			return true
		case BitsPerChannelElement: // \Segment\Tracks\TrackEntry\Video\Colour\BitsPerChannel
			return true
		case ChromaSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingHorz
			return true
		case ChromaSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingVert
			return true
		case CbSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingHorz
			return true
		case CbSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingVert
			return true
		case ChromaSitingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingHorz
			return true
		case ChromaSitingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingVert
			return true
		case RangeElement: // \Segment\Tracks\TrackEntry\Video\Colour\Range
			return true
		case TransferCharacteristicsElement: // \Segment\Tracks\TrackEntry\Video\Colour\TransferCharacteristics
			return true
		case PrimariesElement: // \Segment\Tracks\TrackEntry\Video\Colour\Primaries
			return true
		case MaxCLLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxCLL
			return true
		case MaxFALLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxFALL
			return true
		case MasteringMetadataElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata
			return true
		case PrimaryRChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityX
			return true
		case PrimaryRChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityY
			return true
		case PrimaryGChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityX
			return true
		case PrimaryGChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityY
			return true
		case PrimaryBChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityX
			return true
		case PrimaryBChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityY
			return true
		case WhitePointChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityX
			return true
		case WhitePointChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityY
			return true
		case LuminanceMaxElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMax
			return true
		case LuminanceMinElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMin
			return true
		case ProjectionElement: // \Segment\Tracks\TrackEntry\Video\Projection
			return true
		case ProjectionTypeElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionType
			return true
		case ProjectionPrivateElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPrivate
			return true
		case ProjectionPoseYawElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseYaw
			return true
		case ProjectionPosePitchElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPosePitch
			return true
		case ProjectionPoseRollElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseRoll
			return true
		case AudioElement: // \Segment\Tracks\TrackEntry\Audio
			return true
		case SamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\SamplingFrequency
			return true
		case OutputSamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\OutputSamplingFrequency
			return true
		case ChannelsElement: // \Segment\Tracks\TrackEntry\Audio\Channels
			return true
		case ChannelPositionsElement: // \Segment\Tracks\TrackEntry\Audio\ChannelPositions
			return true
		case BitDepthElement: // \Segment\Tracks\TrackEntry\Audio\BitDepth
			return true
		case TrackOperationElement: // \Segment\Tracks\TrackEntry\TrackOperation
			return true
		case TrackCombinePlanesElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes
			return true
		case TrackPlaneElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane
			return true
		case TrackPlaneUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneUID
			return true
		case TrackPlaneTypeElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneType
			return true
		case TrackJoinBlocksElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks
			return true
		case TrackJoinUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks\TrackJoinUID
			return true
		case TrickTrackUIDElement: // \Segment\Tracks\TrackEntry\TrickTrackUID
			return true
		case TrickTrackSegmentUIDElement: // \Segment\Tracks\TrackEntry\TrickTrackSegmentUID
			return true
		case TrickTrackFlagElement: // \Segment\Tracks\TrackEntry\TrickTrackFlag
			return true
		case TrickMasterTrackUIDElement: // \Segment\Tracks\TrackEntry\TrickMasterTrackUID
			return true
		case TrickMasterTrackSegmentUIDElement: // \Segment\Tracks\TrackEntry\TrickMasterTrackSegmentUID
			return true
		case ContentEncodingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings
			return true
		case ContentEncodingElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding
			return true
		case ContentEncodingOrderElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingOrder
			return true
		case ContentEncodingScopeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingScope
			return true
		case ContentEncodingTypeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingType
			return true
		case ContentCompressionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression
			return true
		case ContentCompAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompAlgo
			return true
		case ContentCompSettingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompSettings
			return true
		case ContentEncryptionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption
			return true
		case ContentEncAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncAlgo
			return true
		case ContentEncKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncKeyID
			return true
		case ContentSignatureElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSignature
			return true
		case ContentSigKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigKeyID
			return true
		case ContentSigAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigAlgo
			return true
		case ContentSigHashAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigHashAlgo
			return true
		default:
			return false
		}
	case TrackJoinBlocksElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackJoinUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks\TrackJoinUID
			return true
		default:
			return false
		}
	case TrackOperationElement: // \Segment\Tracks\TrackEntry\TrackOperation
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackCombinePlanesElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes
			return true
		case TrackPlaneElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane
			return true
		case TrackPlaneUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneUID
			return true
		case TrackPlaneTypeElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneType
			return true
		case TrackJoinBlocksElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks
			return true
		case TrackJoinUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks\TrackJoinUID
			return true
		default:
			return false
		}
	case TrackPlaneElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackPlaneUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneUID
			return true
		case TrackPlaneTypeElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneType
			return true
		default:
			return false
		}
	case TrackTranslateElement: // \Segment\Tracks\TrackEntry\TrackTranslate
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackTranslateEditionUIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateEditionUID
			return true
		case TrackTranslateCodecElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateCodec
			return true
		case TrackTranslateTrackIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateTrackID
			return true
		default:
			return false
		}
	case TracksElement: // \Segment\Tracks
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case TrackEntryElement: // \Segment\Tracks\TrackEntry
			return true
		case TrackNumberElement: // \Segment\Tracks\TrackEntry\TrackNumber
			return true
		case TrackUIDElement: // \Segment\Tracks\TrackEntry\TrackUID
			return true
		case TrackTypeElement: // \Segment\Tracks\TrackEntry\TrackType
			return true
		case FlagEnabledElement: // \Segment\Tracks\TrackEntry\FlagEnabled
			return true
		case FlagDefaultElement: // \Segment\Tracks\TrackEntry\FlagDefault
			return true
		case FlagForcedElement: // \Segment\Tracks\TrackEntry\FlagForced
			return true
		case FlagLacingElement: // \Segment\Tracks\TrackEntry\FlagLacing
			return true
		case MinCacheElement: // \Segment\Tracks\TrackEntry\MinCache
			return true
		case MaxCacheElement: // \Segment\Tracks\TrackEntry\MaxCache
			return true
		case DefaultDurationElement: // \Segment\Tracks\TrackEntry\DefaultDuration
			return true
		case DefaultDecodedFieldDurationElement: // \Segment\Tracks\TrackEntry\DefaultDecodedFieldDuration
			return true
		case TrackTimecodeScaleElement: // \Segment\Tracks\TrackEntry\TrackTimecodeScale
			return true
		case TrackOffsetElement: // \Segment\Tracks\TrackEntry\TrackOffset
			return true
		case MaxBlockAdditionIDElement: // \Segment\Tracks\TrackEntry\MaxBlockAdditionID
			return true
		case NameElement: // \Segment\Tracks\TrackEntry\Name
			return true
		case LanguageElement: // \Segment\Tracks\TrackEntry\Language
			return true
		case LanguageIETFElement: // \Segment\Tracks\TrackEntry\LanguageIETF
			return true
		case CodecIDElement: // \Segment\Tracks\TrackEntry\CodecID
			return true
		case CodecPrivateElement: // \Segment\Tracks\TrackEntry\CodecPrivate
			return true
		case CodecNameElement: // \Segment\Tracks\TrackEntry\CodecName
			return true
		case AttachmentLinkElement: // \Segment\Tracks\TrackEntry\AttachmentLink
			return true
		case CodecSettingsElement: // \Segment\Tracks\TrackEntry\CodecSettings
			return true
		case CodecInfoURLElement: // \Segment\Tracks\TrackEntry\CodecInfoURL
			return true
		case CodecDownloadURLElement: // \Segment\Tracks\TrackEntry\CodecDownloadURL
			return true
		case CodecDecodeAllElement: // \Segment\Tracks\TrackEntry\CodecDecodeAll
			return true
		case TrackOverlayElement: // \Segment\Tracks\TrackEntry\TrackOverlay
			return true
		case CodecDelayElement: // \Segment\Tracks\TrackEntry\CodecDelay
			return true
		case SeekPreRollElement: // \Segment\Tracks\TrackEntry\SeekPreRoll
			return true
		case TrackTranslateElement: // \Segment\Tracks\TrackEntry\TrackTranslate
			return true
		case TrackTranslateEditionUIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateEditionUID
			return true
		case TrackTranslateCodecElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateCodec
			return true
		case TrackTranslateTrackIDElement: // \Segment\Tracks\TrackEntry\TrackTranslate\TrackTranslateTrackID
			return true
		case VideoElement: // \Segment\Tracks\TrackEntry\Video
			return true
		case FlagInterlacedElement: // \Segment\Tracks\TrackEntry\Video\FlagInterlaced
			return true
		case FieldOrderElement: // \Segment\Tracks\TrackEntry\Video\FieldOrder
			return true
		case StereoModeElement: // \Segment\Tracks\TrackEntry\Video\StereoMode
			return true
		case AlphaModeElement: // \Segment\Tracks\TrackEntry\Video\AlphaMode
			return true
		case OldStereoModeElement: // \Segment\Tracks\TrackEntry\Video\OldStereoMode
			return true
		case PixelWidthElement: // \Segment\Tracks\TrackEntry\Video\PixelWidth
			return true
		case PixelHeightElement: // \Segment\Tracks\TrackEntry\Video\PixelHeight
			return true
		case PixelCropBottomElement: // \Segment\Tracks\TrackEntry\Video\PixelCropBottom
			return true
		case PixelCropTopElement: // \Segment\Tracks\TrackEntry\Video\PixelCropTop
			return true
		case PixelCropLeftElement: // \Segment\Tracks\TrackEntry\Video\PixelCropLeft
			return true
		case PixelCropRightElement: // \Segment\Tracks\TrackEntry\Video\PixelCropRight
			return true
		case DisplayWidthElement: // \Segment\Tracks\TrackEntry\Video\DisplayWidth
			return true
		case DisplayHeightElement: // \Segment\Tracks\TrackEntry\Video\DisplayHeight
			return true
		case DisplayUnitElement: // \Segment\Tracks\TrackEntry\Video\DisplayUnit
			return true
		case AspectRatioTypeElement: // \Segment\Tracks\TrackEntry\Video\AspectRatioType
			return true
		case ColourSpaceElement: // \Segment\Tracks\TrackEntry\Video\ColourSpace
			return true
		case GammaValueElement: // \Segment\Tracks\TrackEntry\Video\GammaValue
			return true
		case FrameRateElement: // \Segment\Tracks\TrackEntry\Video\FrameRate
			return true
		case ColourElement: // \Segment\Tracks\TrackEntry\Video\Colour
			return true
		case MatrixCoefficientsElement: // \Segment\Tracks\TrackEntry\Video\Colour\MatrixCoefficients
			return true
		case BitsPerChannelElement: // \Segment\Tracks\TrackEntry\Video\Colour\BitsPerChannel
			return true
		case ChromaSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingHorz
			return true
		case ChromaSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingVert
			return true
		case CbSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingHorz
			return true
		case CbSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingVert
			return true
		case ChromaSitingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingHorz
			return true
		case ChromaSitingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingVert
			return true
		case RangeElement: // \Segment\Tracks\TrackEntry\Video\Colour\Range
			return true
		case TransferCharacteristicsElement: // \Segment\Tracks\TrackEntry\Video\Colour\TransferCharacteristics
			return true
		case PrimariesElement: // \Segment\Tracks\TrackEntry\Video\Colour\Primaries
			return true
		case MaxCLLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxCLL
			return true
		case MaxFALLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxFALL
			return true
		case MasteringMetadataElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata
			return true
		case PrimaryRChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityX
			return true
		case PrimaryRChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityY
			return true
		case PrimaryGChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityX
			return true
		case PrimaryGChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityY
			return true
		case PrimaryBChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityX
			return true
		case PrimaryBChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityY
			return true
		case WhitePointChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityX
			return true
		case WhitePointChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityY
			return true
		case LuminanceMaxElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMax
			return true
		case LuminanceMinElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMin
			return true
		case ProjectionElement: // \Segment\Tracks\TrackEntry\Video\Projection
			return true
		case ProjectionTypeElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionType
			return true
		case ProjectionPrivateElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPrivate
			return true
		case ProjectionPoseYawElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseYaw
			return true
		case ProjectionPosePitchElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPosePitch
			return true
		case ProjectionPoseRollElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseRoll
			return true
		case AudioElement: // \Segment\Tracks\TrackEntry\Audio
			return true
		case SamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\SamplingFrequency
			return true
		case OutputSamplingFrequencyElement: // \Segment\Tracks\TrackEntry\Audio\OutputSamplingFrequency
			return true
		case ChannelsElement: // \Segment\Tracks\TrackEntry\Audio\Channels
			return true
		case ChannelPositionsElement: // \Segment\Tracks\TrackEntry\Audio\ChannelPositions
			return true
		case BitDepthElement: // \Segment\Tracks\TrackEntry\Audio\BitDepth
			return true
		case TrackOperationElement: // \Segment\Tracks\TrackEntry\TrackOperation
			return true
		case TrackCombinePlanesElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes
			return true
		case TrackPlaneElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane
			return true
		case TrackPlaneUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneUID
			return true
		case TrackPlaneTypeElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackCombinePlanes\TrackPlane\TrackPlaneType
			return true
		case TrackJoinBlocksElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks
			return true
		case TrackJoinUIDElement: // \Segment\Tracks\TrackEntry\TrackOperation\TrackJoinBlocks\TrackJoinUID
			return true
		case TrickTrackUIDElement: // \Segment\Tracks\TrackEntry\TrickTrackUID
			return true
		case TrickTrackSegmentUIDElement: // \Segment\Tracks\TrackEntry\TrickTrackSegmentUID
			return true
		case TrickTrackFlagElement: // \Segment\Tracks\TrackEntry\TrickTrackFlag
			return true
		case TrickMasterTrackUIDElement: // \Segment\Tracks\TrackEntry\TrickMasterTrackUID
			return true
		case TrickMasterTrackSegmentUIDElement: // \Segment\Tracks\TrackEntry\TrickMasterTrackSegmentUID
			return true
		case ContentEncodingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings
			return true
		case ContentEncodingElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding
			return true
		case ContentEncodingOrderElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingOrder
			return true
		case ContentEncodingScopeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingScope
			return true
		case ContentEncodingTypeElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncodingType
			return true
		case ContentCompressionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression
			return true
		case ContentCompAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompAlgo
			return true
		case ContentCompSettingsElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentCompression\ContentCompSettings
			return true
		case ContentEncryptionElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption
			return true
		case ContentEncAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncAlgo
			return true
		case ContentEncKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentEncKeyID
			return true
		case ContentSignatureElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSignature
			return true
		case ContentSigKeyIDElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigKeyID
			return true
		case ContentSigAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigAlgo
			return true
		case ContentSigHashAlgoElement: // \Segment\Tracks\TrackEntry\ContentEncodings\ContentEncoding\ContentEncryption\ContentSigHashAlgo
			return true
		default:
			return false
		}
	case VideoElement: // \Segment\Tracks\TrackEntry\Video
		switch p1 {
		case VoidElement: // \(-\)Void
			return true
		case CRC32Element: // \(1-\)CRC-32
			return true
		case FlagInterlacedElement: // \Segment\Tracks\TrackEntry\Video\FlagInterlaced
			return true
		case FieldOrderElement: // \Segment\Tracks\TrackEntry\Video\FieldOrder
			return true
		case StereoModeElement: // \Segment\Tracks\TrackEntry\Video\StereoMode
			return true
		case AlphaModeElement: // \Segment\Tracks\TrackEntry\Video\AlphaMode
			return true
		case OldStereoModeElement: // \Segment\Tracks\TrackEntry\Video\OldStereoMode
			return true
		case PixelWidthElement: // \Segment\Tracks\TrackEntry\Video\PixelWidth
			return true
		case PixelHeightElement: // \Segment\Tracks\TrackEntry\Video\PixelHeight
			return true
		case PixelCropBottomElement: // \Segment\Tracks\TrackEntry\Video\PixelCropBottom
			return true
		case PixelCropTopElement: // \Segment\Tracks\TrackEntry\Video\PixelCropTop
			return true
		case PixelCropLeftElement: // \Segment\Tracks\TrackEntry\Video\PixelCropLeft
			return true
		case PixelCropRightElement: // \Segment\Tracks\TrackEntry\Video\PixelCropRight
			return true
		case DisplayWidthElement: // \Segment\Tracks\TrackEntry\Video\DisplayWidth
			return true
		case DisplayHeightElement: // \Segment\Tracks\TrackEntry\Video\DisplayHeight
			return true
		case DisplayUnitElement: // \Segment\Tracks\TrackEntry\Video\DisplayUnit
			return true
		case AspectRatioTypeElement: // \Segment\Tracks\TrackEntry\Video\AspectRatioType
			return true
		case ColourSpaceElement: // \Segment\Tracks\TrackEntry\Video\ColourSpace
			return true
		case GammaValueElement: // \Segment\Tracks\TrackEntry\Video\GammaValue
			return true
		case FrameRateElement: // \Segment\Tracks\TrackEntry\Video\FrameRate
			return true
		case ColourElement: // \Segment\Tracks\TrackEntry\Video\Colour
			return true
		case MatrixCoefficientsElement: // \Segment\Tracks\TrackEntry\Video\Colour\MatrixCoefficients
			return true
		case BitsPerChannelElement: // \Segment\Tracks\TrackEntry\Video\Colour\BitsPerChannel
			return true
		case ChromaSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingHorz
			return true
		case ChromaSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSubsamplingVert
			return true
		case CbSubsamplingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingHorz
			return true
		case CbSubsamplingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\CbSubsamplingVert
			return true
		case ChromaSitingHorzElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingHorz
			return true
		case ChromaSitingVertElement: // \Segment\Tracks\TrackEntry\Video\Colour\ChromaSitingVert
			return true
		case RangeElement: // \Segment\Tracks\TrackEntry\Video\Colour\Range
			return true
		case TransferCharacteristicsElement: // \Segment\Tracks\TrackEntry\Video\Colour\TransferCharacteristics
			return true
		case PrimariesElement: // \Segment\Tracks\TrackEntry\Video\Colour\Primaries
			return true
		case MaxCLLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxCLL
			return true
		case MaxFALLElement: // \Segment\Tracks\TrackEntry\Video\Colour\MaxFALL
			return true
		case MasteringMetadataElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata
			return true
		case PrimaryRChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityX
			return true
		case PrimaryRChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryRChromaticityY
			return true
		case PrimaryGChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityX
			return true
		case PrimaryGChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryGChromaticityY
			return true
		case PrimaryBChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityX
			return true
		case PrimaryBChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\PrimaryBChromaticityY
			return true
		case WhitePointChromaticityXElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityX
			return true
		case WhitePointChromaticityYElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\WhitePointChromaticityY
			return true
		case LuminanceMaxElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMax
			return true
		case LuminanceMinElement: // \Segment\Tracks\TrackEntry\Video\Colour\MasteringMetadata\LuminanceMin
			return true
		case ProjectionElement: // \Segment\Tracks\TrackEntry\Video\Projection
			return true
		case ProjectionTypeElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionType
			return true
		case ProjectionPrivateElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPrivate
			return true
		case ProjectionPoseYawElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseYaw
			return true
		case ProjectionPosePitchElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPosePitch
			return true
		case ProjectionPoseRollElement: // \Segment\Tracks\TrackEntry\Video\Projection\ProjectionPoseRoll
			return true
		default:
			return false
		}
	default:
		return false
	}
}

func isRootElement(el ElementID) bool {
	switch el {
	case EBMLElement: // \EBML
		return true
	case SegmentElement: // \Segment
		return true
	default:
		return false
	}
}

// Possible AspectRatioTypeElement values
const (
	// free resizing
	AspectRatioType_FreeResizing int64 = 0

	// keep aspect ratio
	AspectRatioType_KeepAspectRatio int64 = 1

	// fixed
	AspectRatioType_Fixed int64 = 2
)

// Possible ChapProcessTimeElement values
const (
	// during the whole chapter
	ChapProcessTime_DuringTheWholeChapter int64 = 0

	// before starting playback
	ChapProcessTime_BeforeStartingPlayback int64 = 1

	// after playback of the chapter
	ChapProcessTime_AfterPlaybackOfTheChapter int64 = 2
)

// Possible ChapterTranslateCodecElement values
const (
	// Matroska Script
	ChapterTranslateCodec_MatroskaScript int64 = 0

	// DVD-menu
	ChapterTranslateCodec_DVDMenu int64 = 1
)

// Possible ChromaSitingHorzElement values
const (
	// unspecified
	ChromaSitingHorz_Unspecified int64 = 0

	// left collocated
	ChromaSitingHorz_LeftCollocated int64 = 1

	// half
	ChromaSitingHorz_Half int64 = 2
)

// Possible ChromaSitingVertElement values
const (
	// unspecified
	ChromaSitingVert_Unspecified int64 = 0

	// top collocated
	ChromaSitingVert_TopCollocated int64 = 1

	// half
	ChromaSitingVert_Half int64 = 2
)

// Possible DisplayUnitElement values
const (
	// pixels
	DisplayUnit_Pixels int64 = 0

	// centimeters
	DisplayUnit_Centimeters int64 = 1

	// inches
	DisplayUnit_Inches int64 = 2

	// display aspect ratio
	DisplayUnit_DisplayAspectRatio int64 = 3

	// unknown
	DisplayUnit_Unknown int64 = 4
)

// Possible FieldOrderElement values
const (
	// progressive
	FieldOrder_Progressive int64 = 0

	// tff
	FieldOrder_Tff int64 = 1

	// undetermined
	FieldOrder_Undetermined int64 = 2

	// bff
	FieldOrder_Bff int64 = 6

	// bff(swapped)
	FieldOrder_BffSwapped int64 = 9

	// tff(swapped)
	FieldOrder_TffSwapped int64 = 14
)

// Possible FlagInterlacedElement values
const (
	// undetermined
	FlagInterlaced_Undetermined int64 = 0

	// interlaced
	FlagInterlaced_Interlaced int64 = 1

	// progressive
	FlagInterlaced_Progressive int64 = 2
)

// Possible MatrixCoefficientsElement values
const (
	// GBR
	MatrixCoefficients_GBR int64 = 0

	// BT709
	MatrixCoefficients_BT709 int64 = 1

	// unspecified
	MatrixCoefficients_Unspecified int64 = 2

	// reserved
	MatrixCoefficients_Reserved3 int64 = 3

	// FCC
	MatrixCoefficients_FCC int64 = 4

	// BT470BG
	MatrixCoefficients_BT470BG int64 = 5

	// SMPTE 170M
	MatrixCoefficients_SMPTE170M int64 = 6

	// SMPTE 240M
	MatrixCoefficients_SMPTE240M int64 = 7

	// YCoCg
	MatrixCoefficients_Ycocg int64 = 8

	// BT2020 Non-constant Luminance
	MatrixCoefficients_BT2020NonConstantLuminance int64 = 9

	// BT2020 Constant Luminance
	MatrixCoefficients_BT2020ConstantLuminance int64 = 10
)

// Possible OldStereoModeElement values
const (
	// mono
	OldStereoMode_Mono int64 = 0

	// right eye
	OldStereoMode_RightEye int64 = 1

	// left eye
	OldStereoMode_LeftEye int64 = 2

	// both eyes
	OldStereoMode_BothEyes int64 = 3
)

// Possible PrimariesElement values
const (
	// reserved
	Primaries_Reserved0 int64 = 0

	// ITU-R BT.709
	Primaries_ITURBT709 int64 = 1

	// unspecified
	Primaries_Unspecified int64 = 2

	// reserved
	Primaries_Reserved3 int64 = 3

	// ITU-R BT.470M
	Primaries_ITURBT470M int64 = 4

	// ITU-R BT.470BG
	Primaries_ITURBT470BG int64 = 5

	// SMPTE 170M
	Primaries_SMPTE170M int64 = 6

	// SMPTE 240M
	Primaries_SMPTE240M int64 = 7

	// FILM
	Primaries_FILM int64 = 8

	// ITU-R BT.2020
	Primaries_ITURBT2020 int64 = 9

	// SMPTE ST 428-1
	Primaries_SMPTEST4281 int64 = 10

	// JEDEC P22 phosphors
	Primaries_JEDECP22Phosphors int64 = 22
)

// Possible ProjectionTypeElement values
const (
	// rectangular
	ProjectionType_Rectangular int64 = 0

	// equirectangular
	ProjectionType_Equirectangular int64 = 1

	// cubemap
	ProjectionType_Cubemap int64 = 2

	// mesh
	ProjectionType_Mesh int64 = 3
)

// Possible RangeElement values
const (
	// unspecified
	Range_Unspecified int64 = 0

	// broadcast range
	Range_BroadcastRange int64 = 1

	// full range (no clipping)
	Range_FullRangeNoClipping int64 = 2

	// defined by MatrixCoefficients/TransferCharacteristics
	Range_DefinedByMatrixcoefficientsTransfercharacteristics int64 = 3
)

// Possible StereoModeElement values
const (
	// mono
	StereoMode_Mono int64 = 0

	// side by side (left eye first)
	StereoMode_SideBySideLeftEyeFirst int64 = 1

	// top - bottom (right eye is first)
	StereoMode_TopBottomRightEyeIsFirst int64 = 2

	// top - bottom (left eye is first)
	StereoMode_TopBottomLeftEyeIsFirst int64 = 3

	// checkboard (right eye is first)
	StereoMode_CheckboardRightEyeIsFirst int64 = 4

	// checkboard (left eye is first)
	StereoMode_CheckboardLeftEyeIsFirst int64 = 5

	// row interleaved (right eye is first)
	StereoMode_RowInterleavedRightEyeIsFirst int64 = 6

	// row interleaved (left eye is first)
	StereoMode_RowInterleavedLeftEyeIsFirst int64 = 7

	// column interleaved (right eye is first)
	StereoMode_ColumnInterleavedRightEyeIsFirst int64 = 8

	// column interleaved (left eye is first)
	StereoMode_ColumnInterleavedLeftEyeIsFirst int64 = 9

	// anaglyph (cyan/red)
	StereoMode_AnaglyphCyanRed int64 = 10

	// side by side (right eye first)
	StereoMode_SideBySideRightEyeFirst int64 = 11

	// anaglyph (green/magenta)
	StereoMode_AnaglyphGreenMagenta int64 = 12

	// both eyes laced in one Block (left eye is first)
	StereoMode_BothEyesLacedInOneBlockLeftEyeIsFirst int64 = 13

	// both eyes laced in one Block (right eye is first)
	StereoMode_BothEyesLacedInOneBlockRightEyeIsFirst int64 = 14
)

// Possible TargetTypeElement values
const (
	// COLLECTION
	TargetType_COLLECTION string = "COLLECTION"

	// EDITION
	TargetType_EDITION string = "EDITION"

	// ISSUE
	TargetType_ISSUE string = "ISSUE"

	// VOLUME
	TargetType_VOLUME string = "VOLUME"

	// OPUS
	TargetType_OPUS string = "OPUS"

	// SEASON
	TargetType_SEASON string = "SEASON"

	// SEQUEL
	TargetType_SEQUEL string = "SEQUEL"

	// ALBUM
	TargetType_ALBUM string = "ALBUM"

	// OPERA
	TargetType_OPERA string = "OPERA"

	// CONCERT
	TargetType_CONCERT string = "CONCERT"

	// MOVIE
	TargetType_MOVIE string = "MOVIE"

	// EPISODE
	TargetType_EPISODE string = "EPISODE"

	// PART
	TargetType_PART string = "PART"

	// SESSION
	TargetType_SESSION string = "SESSION"

	// TRACK
	TargetType_TRACK string = "TRACK"

	// SONG
	TargetType_SONG string = "SONG"

	// CHAPTER
	TargetType_CHAPTER string = "CHAPTER"

	// SUBTRACK
	TargetType_SUBTRACK string = "SUBTRACK"

	// MOVEMENT
	TargetType_MOVEMENT string = "MOVEMENT"

	// SCENE
	TargetType_SCENE string = "SCENE"

	// SHOT
	TargetType_SHOT string = "SHOT"
)

// Possible TargetTypeValueElement values
const (
	// COLLECTION
	TargetTypeValue_COLLECTION int64 = 70

	// EDITION / ISSUE / VOLUME / OPUS / SEASON / SEQUEL
	TargetTypeValue_EDITIONISSUEVOLUMEOPUSSEASONSEQUEL int64 = 60

	// ALBUM / OPERA / CONCERT / MOVIE / EPISODE / CONCERT
	TargetTypeValue_ALBUMOPERACONCERTMOVIEEPISODECONCERT int64 = 50

	// PART / SESSION
	TargetTypeValue_PARTSESSION int64 = 40

	// TRACK / SONG / CHAPTER
	TargetTypeValue_TRACKSONGCHAPTER int64 = 30

	// SUBTRACK / PART / MOVEMENT / SCENE
	TargetTypeValue_SUBTRACKPARTMOVEMENTSCENE int64 = 20

	// SHOT
	TargetTypeValue_SHOT int64 = 10
)

// Possible TrackPlaneTypeElement values
const (
	// left eye
	TrackPlaneType_LeftEye int64 = 0

	// right eye
	TrackPlaneType_RightEye int64 = 1

	// background
	TrackPlaneType_Background int64 = 2
)

// Possible TrackTranslateCodecElement values
const (
	// Matroska Script
	TrackTranslateCodec_MatroskaScript int64 = 0

	// DVD-menu
	TrackTranslateCodec_DVDMenu int64 = 1
)

// Possible TrackTypeElement values
const (
	// video
	TrackType_Video int64 = 1

	// audio
	TrackType_Audio int64 = 2

	// complex
	TrackType_Complex int64 = 3

	// logo
	TrackType_Logo int64 = 16

	// subtitle
	TrackType_Subtitle int64 = 17

	// buttons
	TrackType_Buttons int64 = 18

	// control
	TrackType_Control int64 = 32
)

// Possible TransferCharacteristicsElement values
const (
	// reserved
	TransferCharacteristics_Reserved0 int64 = 0

	// ITU-R BT.709
	TransferCharacteristics_ITURBT709 int64 = 1

	// unspecified
	TransferCharacteristics_Unspecified int64 = 2

	// reserved
	TransferCharacteristics_Reserved3 int64 = 3

	// Gamma 2.2 curve
	TransferCharacteristics_Gamma22Curve int64 = 4

	// Gamma 2.8 curve
	TransferCharacteristics_Gamma28Curve int64 = 5

	// SMPTE 170M
	TransferCharacteristics_SMPTE170M int64 = 6

	// SMPTE 240M
	TransferCharacteristics_SMPTE240M int64 = 7

	// Linear
	TransferCharacteristics_Linear int64 = 8

	// Log
	TransferCharacteristics_Log int64 = 9

	// Log Sqrt
	TransferCharacteristics_LogSqrt int64 = 10

	// IEC 61966-2-4
	TransferCharacteristics_IEC6196624 int64 = 11

	// ITU-R BT.1361 Extended Colour Gamut
	TransferCharacteristics_ITURBT1361ExtendedColourGamut int64 = 12

	// IEC 61966-2-1
	TransferCharacteristics_IEC6196621 int64 = 13

	// ITU-R BT.2020 10 bit
	TransferCharacteristics_ITURBT202010Bit int64 = 14

	// ITU-R BT.2020 12 bit
	TransferCharacteristics_ITURBT202012Bit int64 = 15

	// SMPTE ST 2084
	TransferCharacteristics_SMPTEST2084 int64 = 16

	// SMPTE ST 428-1
	TransferCharacteristics_SMPTEST4281 int64 = 17

	// ARIB STD-B67 (HLG)
	TransferCharacteristics_ARIBSTDB67HLG int64 = 18
)
